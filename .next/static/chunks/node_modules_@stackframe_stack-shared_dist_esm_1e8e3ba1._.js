(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push([typeof document === "object" ? document.currentScript : undefined, {

"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/globals.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/globals.tsx
__turbopack_context__.s({
    "createGlobal": ()=>createGlobal,
    "globalVar": ()=>globalVar
});
var _globalVar, _stackGlobalsSymbol;
var globalVar = typeof globalThis !== "undefined" ? globalThis : ("TURBOPACK compile-time truthy", 1) ? ("TURBOPACK ident replacement", globalThis) : "TURBOPACK unreachable";
if (typeof globalThis === "undefined") {
    globalVar.globalThis = globalVar;
}
var stackGlobalsSymbol = Symbol.for("__stack-globals");
var _;
(_ = (_globalVar = globalVar)[_stackGlobalsSymbol = stackGlobalsSymbol]) !== null && _ !== void 0 ? _ : _globalVar[_stackGlobalsSymbol] = {};
function createGlobal(key, init) {
    if (!globalVar[stackGlobalsSymbol][key]) {
        globalVar[stackGlobalsSymbol][key] = init();
    }
    return globalVar[stackGlobalsSymbol][key];
}
;
 //# sourceMappingURL=globals.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/compile-time.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/compile-time.tsx
__turbopack_context__.s({
    "scrambleDuringCompileTime": ()=>scrambleDuringCompileTime
});
function scrambleDuringCompileTime(t) {
    if (Math.random() < 1e-5 && Math.random() > 0.99999 && Math.random() < 1e-5 && Math.random() > 0.99999) {
        return "this will never happen";
    }
    return t;
}
;
 //# sourceMappingURL=compile-time.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/functions.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/functions.tsx
__turbopack_context__.s({
    "identity": ()=>identity,
    "identityArgs": ()=>identityArgs
});
function identity(t) {
    return t;
}
function identityArgs() {
    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
        args[_key] = arguments[_key];
    }
    return args;
}
;
 //# sourceMappingURL=functions.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/math.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/math.tsx
__turbopack_context__.s({
    "remainder": ()=>remainder
});
function remainder(n, d) {
    return (n % d + Math.abs(d)) % d;
}
;
 //# sourceMappingURL=math.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/arrays.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/arrays.tsx
__turbopack_context__.s({
    "enumerate": ()=>enumerate,
    "findLastIndex": ()=>findLastIndex,
    "groupBy": ()=>groupBy,
    "isShallowEqual": ()=>isShallowEqual,
    "outerProduct": ()=>outerProduct,
    "range": ()=>range,
    "rotateLeft": ()=>rotateLeft,
    "rotateRight": ()=>rotateRight,
    "shuffle": ()=>shuffle,
    "typedIncludes": ()=>typedIncludes,
    "unique": ()=>unique
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$math$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/math.js [app-client] (ecmascript)");
;
function typedIncludes(arr, item) {
    return arr.includes(item);
}
function enumerate(arr) {
    return arr.map((item, index)=>[
            index,
            item
        ]);
}
function isShallowEqual(a, b) {
    if (a.length !== b.length) return false;
    for(let i = 0; i < a.length; i++){
        if (a[i] !== b[i]) return false;
    }
    return true;
}
function findLastIndex(arr, predicate) {
    for(let i = arr.length - 1; i >= 0; i--){
        if (predicate(arr[i])) return i;
    }
    return -1;
}
function groupBy(arr, key) {
    const result = /* @__PURE__ */ new Map();
    for (const item of arr){
        const k = key(item);
        if (result.get(k) === void 0) result.set(k, []);
        result.get(k).push(item);
    }
    return result;
}
function range(startInclusive, endExclusive, step) {
    if (endExclusive === void 0) {
        endExclusive = startInclusive;
        startInclusive = 0;
    }
    if (step === void 0) step = 1;
    const result = [];
    for(let i = startInclusive; step > 0 ? i < endExclusive : i > endExclusive; i += step){
        result.push(i);
    }
    return result;
}
function rotateLeft(arr, n) {
    if (arr.length === 0) return [];
    const index = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$math$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["remainder"])(n, arr.length);
    return [
        ...arr.slice(index),
        ...arr.slice(0, index)
    ];
}
function rotateRight(arr, n) {
    return rotateLeft(arr, -n);
}
function shuffle(arr) {
    const result = [
        ...arr
    ];
    for(let i = result.length - 1; i > 0; i--){
        const j = Math.floor(Math.random() * (i + 1));
        [result[i], result[j]] = [
            result[j],
            result[i]
        ];
    }
    return result;
}
function outerProduct(arr1, arr2) {
    return arr1.flatMap((item1)=>arr2.map((item2)=>[
                item1,
                item2
            ]));
}
function unique(arr) {
    return [
        ...new Set(arr)
    ];
}
;
 //# sourceMappingURL=arrays.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/strings.tsx
__turbopack_context__.s({
    "deindent": ()=>deindent,
    "deindentTemplate": ()=>deindentTemplate,
    "escapeTemplateLiteral": ()=>escapeTemplateLiteral,
    "extractScopes": ()=>extractScopes,
    "getWhitespacePrefix": ()=>getWhitespacePrefix,
    "getWhitespaceSuffix": ()=>getWhitespaceSuffix,
    "mergeScopeStrings": ()=>mergeScopeStrings,
    "nicify": ()=>nicify,
    "replaceAll": ()=>replaceAll,
    "stringCompare": ()=>stringCompare,
    "templateIdentity": ()=>templateIdentity,
    "trimEmptyLinesEnd": ()=>trimEmptyLinesEnd,
    "trimEmptyLinesStart": ()=>trimEmptyLinesStart,
    "trimLines": ()=>trimLines,
    "typedCapitalize": ()=>typedCapitalize,
    "typedJoin": ()=>typedJoin,
    "typedToLowercase": ()=>typedToLowercase,
    "typedToUppercase": ()=>typedToUppercase
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_tagged_template_literal.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$arrays$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/arrays.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$objects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js [app-client] (ecmascript)");
;
function _templateObject() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "\n        deindent`\n        ",
        "",
        "\n        ",
        "`\n      "
    ], [
        "\n        deindent\\`\n        ",
        "",
        "\n        ",
        "\\`\n      "
    ]);
    _templateObject = function() {
        return data;
    };
    return data;
}
;
;
;
function typedJoin(strings, separator) {
    return strings.join(separator);
}
function typedToLowercase(s) {
    if (typeof s !== "string") throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Expected a string for typedToLowercase", {
        s
    });
    return s.toLowerCase();
}
function typedToUppercase(s) {
    if (typeof s !== "string") throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Expected a string for typedToUppercase", {
        s
    });
    return s.toUpperCase();
}
function typedCapitalize(s) {
    return s.charAt(0).toUpperCase() + s.slice(1);
}
function stringCompare(a, b) {
    if (typeof a !== "string" || typeof b !== "string") throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Expected two strings for stringCompare, found ".concat(typeof a, " and ").concat(typeof b), {
        a,
        b
    });
    const cmp = (a2, b2)=>a2 < b2 ? -1 : a2 > b2 ? 1 : 0;
    return cmp(a.toUpperCase(), b.toUpperCase()) || cmp(b, a);
}
function getWhitespacePrefix(s) {
    return s.substring(0, s.length - s.trimStart().length);
}
function getWhitespaceSuffix(s) {
    return s.substring(s.trimEnd().length);
}
function trimEmptyLinesStart(s) {
    const lines = s.split("\n");
    const firstNonEmptyLineIndex = lines.findIndex((line)=>line.trim() !== "");
    if (firstNonEmptyLineIndex === -1) return "";
    return lines.slice(firstNonEmptyLineIndex).join("\n");
}
function trimEmptyLinesEnd(s) {
    const lines = s.split("\n");
    const lastNonEmptyLineIndex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$arrays$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findLastIndex"])(lines, (line)=>line.trim() !== "");
    return lines.slice(0, lastNonEmptyLineIndex + 1).join("\n");
}
function trimLines(s) {
    return trimEmptyLinesEnd(trimEmptyLinesStart(s));
}
function templateIdentity(strings) {
    for(var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
        values[_key - 1] = arguments[_key];
    }
    if (values.length !== strings.length - 1) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Invalid number of values; must be one less than strings", {
        strings,
        values
    });
    return strings.reduce((result, str, i)=>{
        var _values_i;
        return result + str + ((_values_i = values[i]) !== null && _values_i !== void 0 ? _values_i : "");
    }, "");
}
function deindent(strings) {
    for(var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
        values[_key - 1] = arguments[_key];
    }
    if (typeof strings === "string") return deindent([
        strings
    ]);
    return templateIdentity(...deindentTemplate(strings, ...values));
}
function deindentTemplate(strings) {
    for(var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
        values[_key - 1] = arguments[_key];
    }
    if (values.length !== strings.length - 1) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Invalid number of values; must be one less than strings", {
        strings,
        values
    });
    const trimmedStrings = [
        ...strings
    ];
    trimmedStrings[0] = trimEmptyLinesStart(trimmedStrings[0] + "+").slice(0, -1);
    trimmedStrings[trimmedStrings.length - 1] = trimEmptyLinesEnd("+" + trimmedStrings[trimmedStrings.length - 1]).slice(1);
    const indentation = trimmedStrings.join("${SOME_VALUE}").split("\n").filter((line)=>line.trim() !== "").map((line)=>getWhitespacePrefix(line).length).reduce((min, current)=>Math.min(min, current), Infinity);
    const deindentedStrings = trimmedStrings.map((string, stringIndex)=>{
        return string.split("\n").map((line, lineIndex)=>stringIndex !== 0 && lineIndex === 0 ? line : line.substring(indentation)).join("\n");
    });
    const indentedValues = values.map((value, i)=>{
        const firstLineIndentation = getWhitespacePrefix(deindentedStrings[i].split("\n").at(-1));
        return "".concat(value).replaceAll("\n", "\n".concat(firstLineIndentation));
    });
    return [
        deindentedStrings,
        ...indentedValues
    ];
}
function extractScopes(scope) {
    let removeDuplicates = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    const trimmedString = scope.trim();
    const scopesArray = trimmedString.split(/\s+/);
    const filtered = scopesArray.filter((scope2)=>scope2.length > 0);
    return removeDuplicates ? [
        ...new Set(filtered)
    ] : filtered;
}
function mergeScopeStrings() {
    for(var _len = arguments.length, scopes = new Array(_len), _key = 0; _key < _len; _key++){
        scopes[_key] = arguments[_key];
    }
    const allScope = scopes.map((s)=>extractScopes(s)).flat().join(" ");
    return extractScopes(allScope).join(" ");
}
function escapeTemplateLiteral(s) {
    return s.replaceAll("`", "\\`").replaceAll("\\", "\\\\").replaceAll("$", "\\$");
}
var nicifiableClassNameOverrides = new Map(Object.entries({
    Headers
}).map((param)=>{
    let [k, v] = param;
    return [
        v,
        k
    ];
}));
function nicify(value) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const fullOptions = {
        maxDepth: 5,
        currentIndent: "",
        lineIndent: "  ",
        multiline: true,
        refs: /* @__PURE__ */ new Map(),
        path: "value",
        parent: null,
        overrides: ()=>null,
        keyInParent: null,
        hideFields: [],
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$objects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["filterUndefined"])(options)
    };
    const { maxDepth, currentIndent, lineIndent, multiline, refs, path, overrides, hideFields } = fullOptions;
    const nl = "\n".concat(currentIndent);
    const overrideResult = overrides(value, options);
    if (overrideResult !== null) return overrideResult;
    if ([
        "function",
        "object",
        "symbol"
    ].includes(typeof value) && value !== null) {
        if (refs.has(value)) {
            return "Ref<".concat(refs.get(value), ">");
        }
        refs.set(value, path);
    }
    const newOptions = {
        maxDepth: maxDepth - 1,
        currentIndent,
        lineIndent,
        multiline,
        refs,
        path: path + "->[unknown property]",
        overrides,
        parent: {
            value,
            options: fullOptions
        },
        keyInParent: null,
        hideFields: []
    };
    const nestedNicify = function(newValue, newPath, keyInParent) {
        let options2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
        return nicify(newValue, {
            ...newOptions,
            path: newPath,
            currentIndent: currentIndent + lineIndent,
            keyInParent,
            ...options2
        });
    };
    switch(typeof value){
        case "boolean":
        case "number":
            {
                return JSON.stringify(value);
            }
        case "string":
            {
                const isDeindentable = (v)=>deindent(v) === v && v.includes("\n");
                const wrapInDeindent = (v)=>deindent(_templateObject(), currentIndent + lineIndent, escapeTemplateLiteral(v).replaceAll("\n", nl + lineIndent), currentIndent);
                if (isDeindentable(value)) {
                    return wrapInDeindent(value);
                } else if (value.endsWith("\n") && isDeindentable(value.slice(0, -1))) {
                    return wrapInDeindent(value.slice(0, -1)) + ' + "\\n"';
                } else {
                    return JSON.stringify(value);
                }
            }
        case "undefined":
            {
                return "undefined";
            }
        case "symbol":
            {
                return value.toString();
            }
        case "bigint":
            {
                return "".concat(value, "n");
            }
        case "function":
            {
                if (value.name) return "function ".concat(value.name, "(...) { ... }");
                return "(...) => { ... }";
            }
        case "object":
            {
                if (value === null) return "null";
                if (Array.isArray(value)) {
                    const extraLines2 = getNicifiedObjectExtraLines(value);
                    const resValueLength2 = value.length + extraLines2.length;
                    if (maxDepth <= 0 && resValueLength2 === 0) return "[...]";
                    const resValues2 = value.map((v, i)=>nestedNicify(v, "".concat(path, "[").concat(i, "]"), i));
                    resValues2.push(...extraLines2);
                    if (resValues2.length !== resValueLength2) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("nicify of object: resValues.length !== resValueLength", {
                        value,
                        resValues: resValues2,
                        resValueLength: resValueLength2
                    });
                    const shouldIndent2 = resValues2.length > 4 || resValues2.some((x)=>resValues2.length > 1 && x.length > 4 || x.includes("\n"));
                    if (shouldIndent2) {
                        return "[".concat(nl).concat(resValues2.map((x)=>"".concat(lineIndent).concat(x, ",").concat(nl)).join(""), "]");
                    } else {
                        return "[".concat(resValues2.join(", "), "]");
                    }
                }
                if (value instanceof URL) {
                    return "URL(".concat(nestedNicify(value.toString(), "".concat(path, ".toString()"), null), ")");
                }
                if (ArrayBuffer.isView(value)) {
                    return "".concat(value.constructor.name, "([").concat(value.toString(), "])");
                }
                if (value instanceof Error) {
                    var _value_stack;
                    let stack = (_value_stack = value.stack) !== null && _value_stack !== void 0 ? _value_stack : "";
                    const toString = value.toString();
                    if (!stack.startsWith(toString)) stack = "".concat(toString, "\n").concat(stack);
                    stack = stack.trimEnd();
                    stack = stack.replace(/\n\s+/g, "\n".concat(lineIndent).concat(lineIndent));
                    stack = stack.replace("\n", "\n".concat(lineIndent, "Stack:\n"));
                    if (Object.keys(value).length > 0) {
                        stack += "\n".concat(lineIndent, "Extra properties: ").concat(nestedNicify(Object.fromEntries(Object.entries(value)), path, null));
                    }
                    if (value.cause) {
                        stack += "\n".concat(lineIndent, "Cause:\n").concat(lineIndent).concat(lineIndent).concat(nestedNicify(value.cause, path, null, {
                            currentIndent: currentIndent + lineIndent + lineIndent
                        }));
                    }
                    stack = stack.replaceAll("\n", "\n".concat(currentIndent));
                    return stack;
                }
                var _nicifiableClassNameOverrides_get;
                const constructorName = [
                    null,
                    Object.prototype
                ].includes(Object.getPrototypeOf(value)) ? null : (_nicifiableClassNameOverrides_get = nicifiableClassNameOverrides.get(value.constructor)) !== null && _nicifiableClassNameOverrides_get !== void 0 ? _nicifiableClassNameOverrides_get : value.constructor.name;
                const constructorString = constructorName ? "".concat(constructorName, " ") : "";
                const entries = getNicifiableEntries(value).filter((param)=>{
                    let [k] = param;
                    return !hideFields.includes(k);
                });
                const extraLines = [
                    ...getNicifiedObjectExtraLines(value),
                    ...hideFields.length > 0 ? [
                        "<some fields may have been hidden>"
                    ] : []
                ];
                const resValueLength = entries.length + extraLines.length;
                if (resValueLength === 0) return "".concat(constructorString, "{}");
                if (maxDepth <= 0) return "".concat(constructorString, "{ ... }");
                const resValues = entries.map((param, keyIndex)=>{
                    let [k, v] = param;
                    const keyNicified = nestedNicify(k, "Object.keys(".concat(path, ")[").concat(keyIndex, "]"), null);
                    const keyInObjectLiteral = typeof k === "string" ? nicifyPropertyString(k) : "[".concat(keyNicified, "]");
                    if (typeof v === "function" && v.name === k) {
                        return "".concat(keyInObjectLiteral, "(...): { ... }");
                    } else {
                        return "".concat(keyInObjectLiteral, ": ").concat(nestedNicify(v, "".concat(path, "[").concat(keyNicified, "]"), k));
                    }
                });
                resValues.push(...extraLines);
                if (resValues.length !== resValueLength) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("nicify of object: resValues.length !== resValueLength", {
                    value,
                    resValues,
                    resValueLength
                });
                const shouldIndent = resValues.length > 1 || resValues.some((x)=>x.includes("\n"));
                if (resValues.length === 0) return "".concat(constructorString, "{}");
                if (shouldIndent) {
                    return "".concat(constructorString, "{").concat(nl).concat(resValues.map((x)=>"".concat(lineIndent).concat(x, ",").concat(nl)).join(""), "}");
                } else {
                    return "".concat(constructorString, "{ ").concat(resValues.join(", "), " }");
                }
            }
        default:
            {
                return "".concat(typeof value, "<").concat(value, ">");
            }
    }
}
function replaceAll(input, searchValue, replaceValue) {
    if (searchValue === "") throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("replaceAll: searchValue is empty");
    return input.split(searchValue).join(replaceValue);
}
function nicifyPropertyString(str) {
    return JSON.stringify(str);
}
function getNicifiableKeys(value) {
    var _this, _value_getNicifiableKeys;
    const overridden = (_this = "getNicifiableKeys" in value ? (_value_getNicifiableKeys = value.getNicifiableKeys) === null || _value_getNicifiableKeys === void 0 ? void 0 : _value_getNicifiableKeys.bind(value) : null) === null || _this === void 0 ? void 0 : _this();
    if (overridden != null) return overridden;
    if (value instanceof Response) {
        return [
            "status",
            "headers"
        ];
    }
    const keys = Object.keys(value).sort();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$arrays$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unique"])(keys);
}
function getNicifiableEntries(value) {
    const recordLikes = [
        Headers
    ];
    function isRecordLike(value2) {
        return recordLikes.some((x)=>value2 instanceof x);
    }
    if (isRecordLike(value)) {
        return [
            ...value.entries()
        ].sort((param, param1)=>{
            let [a] = param, [b] = param1;
            return stringCompare("".concat(a), "".concat(b));
        });
    }
    const keys = getNicifiableKeys(value);
    return keys.map((k)=>[
            k,
            value[k]
        ]);
}
function getNicifiedObjectExtraLines(value) {
    var _this;
    var _ref;
    return (_ref = (_this = "getNicifiedObjectExtraLines" in value ? value.getNicifiedObjectExtraLines : null) === null || _this === void 0 ? void 0 : _this()) !== null && _ref !== void 0 ? _ref : [];
}
;
 //# sourceMappingURL=strings.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/types.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/types.tsx
__turbopack_context__.s({
    "typeAssert": ()=>typeAssert,
    "typeAssertExtends": ()=>typeAssertExtends,
    "typeAssertIs": ()=>typeAssertIs
});
typeAssertIs()();
typeAssertIs()();
typeAssertIs()();
function typeAssert() {
    return ()=>void 0;
}
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
function typeAssertExtends() {
    return ()=>void 0;
}
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
function typeAssertIs() {
    return ()=>void 0;
}
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
typeAssertExtends()();
;
 //# sourceMappingURL=types.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/objects.tsx
__turbopack_context__.s({
    "deepFilterUndefined": ()=>deepFilterUndefined,
    "deepMerge": ()=>deepMerge,
    "deepPlainClone": ()=>deepPlainClone,
    "deepPlainEquals": ()=>deepPlainEquals,
    "deepSortKeys": ()=>deepSortKeys,
    "deleteKey": ()=>deleteKey,
    "filterUndefined": ()=>filterUndefined,
    "filterUndefinedOrNull": ()=>filterUndefinedOrNull,
    "get": ()=>get,
    "getOrUndefined": ()=>getOrUndefined,
    "has": ()=>has,
    "hasAndNotUndefined": ()=>hasAndNotUndefined,
    "isCloneable": ()=>isCloneable,
    "isNotNull": ()=>isNotNull,
    "isObjectLike": ()=>isObjectLike,
    "mapValues": ()=>mapValues,
    "omit": ()=>omit,
    "pick": ()=>pick,
    "set": ()=>set,
    "shallowClone": ()=>shallowClone,
    "sortKeys": ()=>sortKeys,
    "split": ()=>split,
    "typedAssign": ()=>typedAssign,
    "typedEntries": ()=>typedEntries,
    "typedFromEntries": ()=>typedFromEntries,
    "typedKeys": ()=>typedKeys,
    "typedValues": ()=>typedValues
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$functions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/functions.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/types.js [app-client] (ecmascript)");
;
;
;
;
function isNotNull(value) {
    return value !== null && value !== void 0;
}
function deepPlainEquals(obj1, obj2) {
    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    if (typeof obj1 !== typeof obj2) return false;
    if (obj1 === obj2) return true;
    switch(typeof obj1){
        case "object":
            {
                if (!obj1 || !obj2) return false;
                if (Array.isArray(obj1) || Array.isArray(obj2)) {
                    if (!Array.isArray(obj1) || !Array.isArray(obj2)) return false;
                    if (obj1.length !== obj2.length) return false;
                    return obj1.every((v, i)=>deepPlainEquals(v, obj2[i], options));
                }
                const entries1 = Object.entries(obj1).filter((param)=>{
                    let [k, v] = param;
                    return !options.ignoreUndefinedValues || v !== void 0;
                });
                const entries2 = Object.entries(obj2).filter((param)=>{
                    let [k, v] = param;
                    return !options.ignoreUndefinedValues || v !== void 0;
                });
                if (entries1.length !== entries2.length) return false;
                return entries1.every((param)=>{
                    let [k, v1] = param;
                    const e2 = entries2.find((param)=>{
                        let [k2] = param;
                        return k === k2;
                    });
                    if (!e2) return false;
                    return deepPlainEquals(v1, e2[1], options);
                });
            }
        case "undefined":
        case "string":
        case "number":
        case "boolean":
        case "bigint":
        case "symbol":
        case "function":
            {
                return false;
            }
        default:
            {
                throw new Error("Unexpected typeof " + typeof obj1);
            }
    }
}
function isCloneable(obj) {
    return typeof obj !== "symbol" && typeof obj !== "function";
}
function shallowClone(obj) {
    if (!isCloneable(obj)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("shallowClone does not support symbols or functions", {
        obj
    });
    if (Array.isArray(obj)) return obj.map(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$functions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"]);
    return {
        ...obj
    };
}
function deepPlainClone(obj) {
    if (typeof obj === "function") throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("deepPlainClone does not support functions");
    if (typeof obj === "symbol") throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("deepPlainClone does not support symbols");
    if (typeof obj !== "object" || !obj) return obj;
    if (Array.isArray(obj)) return obj.map(deepPlainClone);
    return Object.fromEntries(Object.entries(obj).map((param)=>{
        let [k, v] = param;
        return [
            k,
            deepPlainClone(v)
        ];
    }));
}
function deepMerge(baseObj, mergeObj) {
    if ([
        baseObj,
        mergeObj,
        ...Object.values(baseObj),
        ...Object.values(mergeObj)
    ].some((o)=>!isCloneable(o))) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("deepMerge does not support functions or symbols", {
        baseObj,
        mergeObj
    });
    const res = shallowClone(baseObj);
    for (const [key, mergeValue] of Object.entries(mergeObj)){
        if (has(res, key)) {
            const baseValue = get(res, key);
            if (isObjectLike(baseValue) && isObjectLike(mergeValue)) {
                set(res, key, deepMerge(baseValue, mergeValue));
                continue;
            }
        }
        set(res, key, mergeValue);
    }
    return res;
}
function typedEntries(obj) {
    return Object.entries(obj);
}
function typedFromEntries(entries) {
    return Object.fromEntries(entries);
}
function typedKeys(obj) {
    return Object.keys(obj);
}
function typedValues(obj) {
    return Object.values(obj);
}
function typedAssign(target, source) {
    return Object.assign(target, source);
}
function filterUndefined(obj) {
    return Object.fromEntries(Object.entries(obj).filter((param)=>{
        let [, v] = param;
        return v !== void 0;
    }));
}
function filterUndefinedOrNull(obj) {
    return Object.fromEntries(Object.entries(obj).filter((param)=>{
        let [, v] = param;
        return v !== void 0 && v !== null;
    }));
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["typeAssertIs"])()();
function deepFilterUndefined(obj) {
    return Object.fromEntries(Object.entries(obj).filter((param)=>{
        let [, v] = param;
        return v !== void 0;
    }).map((param)=>{
        let [k, v] = param;
        return [
            k,
            isObjectLike(v) ? deepFilterUndefined(v) : v
        ];
    }));
}
function pick(obj, keys) {
    return Object.fromEntries(Object.entries(obj).filter((param)=>{
        let [k] = param;
        return keys.includes(k);
    }));
}
function omit(obj, keys) {
    if (!Array.isArray(keys)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("omit: keys must be an array", {
        obj,
        keys
    });
    return Object.fromEntries(Object.entries(obj).filter((param)=>{
        let [k] = param;
        return !keys.includes(k);
    }));
}
function split(obj, keys) {
    return [
        pick(obj, keys),
        omit(obj, keys)
    ];
}
function mapValues(obj, fn) {
    if (Array.isArray(obj)) {
        return obj.map((v)=>fn(v));
    }
    return Object.fromEntries(Object.entries(obj).map((param)=>{
        let [k, v] = param;
        return [
            k,
            fn(v)
        ];
    }));
}
function sortKeys(obj) {
    if (Array.isArray(obj)) {
        return [
            ...obj
        ];
    }
    return Object.fromEntries(Object.entries(obj).sort((param, param1)=>{
        let [a] = param, [b] = param1;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["stringCompare"])(a, b);
    }));
}
function deepSortKeys(obj) {
    return sortKeys(mapValues(obj, (v)=>isObjectLike(v) ? deepSortKeys(v) : v));
}
function set(obj, key, value) {
    Object.defineProperty(obj, key, {
        value,
        writable: true,
        configurable: true,
        enumerable: true
    });
}
function get(obj, key) {
    const descriptor = Object.getOwnPropertyDescriptor(obj, key);
    if (!descriptor) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("get: key ".concat(String(key), " does not exist"), {
        obj,
        key
    });
    return descriptor.value;
}
function getOrUndefined(obj, key) {
    return has(obj, key) ? get(obj, key) : void 0;
}
function has(obj, key) {
    return Object.prototype.hasOwnProperty.call(obj, key);
}
function hasAndNotUndefined(obj, key) {
    return has(obj, key) && get(obj, key) !== void 0;
}
function deleteKey(obj, key) {
    if (has(obj, key)) {
        Reflect.deleteProperty(obj, key);
    } else {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("deleteKey: key ".concat(String(key), " does not exist"), {
            obj,
            key
        });
    }
}
function isObjectLike(value) {
    return (typeof value === "object" || typeof value === "function") && value !== null;
}
;
 //# sourceMappingURL=objects.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/errors.tsx
__turbopack_context__.s({
    "StackAssertionError": ()=>StackAssertionError,
    "StatusError": ()=>StatusError,
    "captureError": ()=>captureError,
    "concatStacktraces": ()=>concatStacktraces,
    "errorToNiceString": ()=>errorToNiceString,
    "registerErrorSink": ()=>registerErrorSink,
    "throwErr": ()=>throwErr
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$globals$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/globals.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$objects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js [app-client] (ecmascript)");
;
;
;
function throwErr() {
    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
        args[_key] = arguments[_key];
    }
    if (typeof args[0] === "string") {
        throw new StackAssertionError(args[0], args[1]);
    } else if (args[0] instanceof Error) {
        throw args[0];
    } else {
        throw new StatusError(...args);
    }
}
function removeStacktraceNameLine(stack) {
    var _stack;
    const addsNameLine = (_stack = new Error().stack) === null || _stack === void 0 ? void 0 : _stack.startsWith("Error\n");
    return stack.split("\n").slice(addsNameLine ? 1 : 0).join("\n");
}
function concatStacktraces(first) {
    for(var _len = arguments.length, errors = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
        errors[_key - 1] = arguments[_key];
    }
    var _first_stack;
    const addsEmptyLineAtEnd = (_first_stack = first.stack) === null || _first_stack === void 0 ? void 0 : _first_stack.endsWith("\n");
    var _stack;
    const separator = removeStacktraceNameLine((_stack = new Error().stack) !== null && _stack !== void 0 ? _stack : "").split("\n")[0];
    for (const error of errors){
        var _error_stack;
        const toAppend = removeStacktraceNameLine((_error_stack = error.stack) !== null && _error_stack !== void 0 ? _error_stack : "");
        first.stack += (addsEmptyLineAtEnd ? "" : "\n") + separator + "\n" + toAppend;
    }
}
var StackAssertionError = class extends Error {
    constructor(message, extraData){
        const disclaimer = "\n\nThis is likely an error in Stack. Please make sure you are running the newest version and report it.";
        super("".concat(message).concat(message.endsWith(disclaimer) ? "" : disclaimer), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$objects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pick"])(extraData !== null && extraData !== void 0 ? extraData : {}, [
            "cause"
        ]));
        this.extraData = extraData;
        Object.defineProperty(this, "customCaptureExtraArgs", {
            get () {
                return [
                    this.extraData
                ];
            },
            enumerable: false
        });
        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].env.NEXT_PUBLIC_STACK_DEBUGGER_ON_ASSERTION_ERROR === "true") {
            debugger;
        }
    }
};
StackAssertionError.prototype.name = "StackAssertionError";
function errorToNiceString(error) {
    if (!(error instanceof Error)) return "".concat(typeof error, "<").concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nicify"])(error), ">");
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nicify"])(error, {
        maxDepth: 8
    });
}
var errorSinks = /* @__PURE__ */ new Set();
function registerErrorSink(sink) {
    if (errorSinks.has(sink)) {
        return;
    }
    errorSinks.add(sink);
}
registerErrorSink(function(location, error) {
    for(var _len = arguments.length, extraArgs = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++){
        extraArgs[_key - 2] = arguments[_key];
    }
    console.error("\x1b[41mCaptured error in ".concat(location, ":"), // HACK: Log a nicified version of the error to get around buggy Next.js pretty-printing
    // https://www.reddit.com/r/nextjs/comments/1gkxdqe/comment/m19kxgn/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button
    errorToNiceString(error), ...extraArgs, "\x1B[0m");
});
registerErrorSink(function(location, error) {
    for(var _len = arguments.length, extraArgs = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++){
        extraArgs[_key - 2] = arguments[_key];
    }
    var _globalVar_stackCapturedErrors;
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$globals$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["globalVar"].stackCapturedErrors = (_globalVar_stackCapturedErrors = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$globals$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["globalVar"].stackCapturedErrors) !== null && _globalVar_stackCapturedErrors !== void 0 ? _globalVar_stackCapturedErrors : [];
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$globals$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["globalVar"].stackCapturedErrors.push({
        location,
        error,
        extraArgs
    });
});
function captureError(location, error) {
    for (const sink of errorSinks){
        sink(location, error, ...error && (typeof error === "object" || typeof error === "function") && "customCaptureExtraArgs" in error && Array.isArray(error.customCaptureExtraArgs) ? error.customCaptureExtraArgs : []);
    }
}
var StatusError = class extends Error {
    static isStatusError(error) {
        return typeof error === "object" && error !== null && "__stackStatusErrorBrand" in error && error.__stackStatusErrorBrand === "stack-status-error-brand-sentinel";
    }
    isClientError() {
        return this.statusCode >= 400 && this.statusCode < 500;
    }
    isServerError() {
        return !this.isClientError();
    }
    getStatusCode() {
        return this.statusCode;
    }
    getBody() {
        return new TextEncoder().encode(this.message);
    }
    getHeaders() {
        return {
            "Content-Type": [
                "text/plain; charset=utf-8"
            ]
        };
    }
    toDescriptiveJson() {
        return {
            status_code: this.getStatusCode(),
            message: this.message,
            headers: this.getHeaders()
        };
    }
    /**
   * @deprecated this is not a good way to make status errors human-readable, use toDescriptiveJson instead
   */ toHttpJson() {
        return {
            status_code: this.statusCode,
            body: this.message,
            headers: this.getHeaders()
        };
    }
    constructor(status, message){
        if (typeof status === "object") {
            message !== null && message !== void 0 ? message : message = status.message;
            status = status.statusCode;
        }
        super(message);
        this.__stackStatusErrorBrand = "stack-status-error-brand-sentinel";
        this.name = "StatusError";
        this.statusCode = status;
        if (!message) {
            throw new StackAssertionError("StatusError always requires a message unless a Status object is passed", {
                cause: this
            });
        }
    }
};
StatusError.BadRequest = {
    statusCode: 400,
    message: "Bad Request"
};
StatusError.Unauthorized = {
    statusCode: 401,
    message: "Unauthorized"
};
StatusError.PaymentRequired = {
    statusCode: 402,
    message: "Payment Required"
};
StatusError.Forbidden = {
    statusCode: 403,
    message: "Forbidden"
};
StatusError.NotFound = {
    statusCode: 404,
    message: "Not Found"
};
StatusError.MethodNotAllowed = {
    statusCode: 405,
    message: "Method Not Allowed"
};
StatusError.NotAcceptable = {
    statusCode: 406,
    message: "Not Acceptable"
};
StatusError.ProxyAuthenticationRequired = {
    statusCode: 407,
    message: "Proxy Authentication Required"
};
StatusError.RequestTimeout = {
    statusCode: 408,
    message: "Request Timeout"
};
StatusError.Conflict = {
    statusCode: 409,
    message: "Conflict"
};
StatusError.Gone = {
    statusCode: 410,
    message: "Gone"
};
StatusError.LengthRequired = {
    statusCode: 411,
    message: "Length Required"
};
StatusError.PreconditionFailed = {
    statusCode: 412,
    message: "Precondition Failed"
};
StatusError.PayloadTooLarge = {
    statusCode: 413,
    message: "Payload Too Large"
};
StatusError.URITooLong = {
    statusCode: 414,
    message: "URI Too Long"
};
StatusError.UnsupportedMediaType = {
    statusCode: 415,
    message: "Unsupported Media Type"
};
StatusError.RangeNotSatisfiable = {
    statusCode: 416,
    message: "Range Not Satisfiable"
};
StatusError.ExpectationFailed = {
    statusCode: 417,
    message: "Expectation Failed"
};
StatusError.ImATeapot = {
    statusCode: 418,
    message: "I'm a teapot"
};
StatusError.MisdirectedRequest = {
    statusCode: 421,
    message: "Misdirected Request"
};
StatusError.UnprocessableEntity = {
    statusCode: 422,
    message: "Unprocessable Entity"
};
StatusError.Locked = {
    statusCode: 423,
    message: "Locked"
};
StatusError.FailedDependency = {
    statusCode: 424,
    message: "Failed Dependency"
};
StatusError.TooEarly = {
    statusCode: 425,
    message: "Too Early"
};
StatusError.UpgradeRequired = {
    statusCode: 426,
    message: "Upgrade Required"
};
StatusError.PreconditionRequired = {
    statusCode: 428,
    message: "Precondition Required"
};
StatusError.TooManyRequests = {
    statusCode: 429,
    message: "Too Many Requests"
};
StatusError.RequestHeaderFieldsTooLarge = {
    statusCode: 431,
    message: "Request Header Fields Too Large"
};
StatusError.UnavailableForLegalReasons = {
    statusCode: 451,
    message: "Unavailable For Legal Reasons"
};
StatusError.InternalServerError = {
    statusCode: 500,
    message: "Internal Server Error"
};
StatusError.NotImplemented = {
    statusCode: 501,
    message: "Not Implemented"
};
StatusError.BadGateway = {
    statusCode: 502,
    message: "Bad Gateway"
};
StatusError.ServiceUnavailable = {
    statusCode: 503,
    message: "Service Unavailable"
};
StatusError.GatewayTimeout = {
    statusCode: 504,
    message: "Gateway Timeout"
};
StatusError.HTTPVersionNotSupported = {
    statusCode: 505,
    message: "HTTP Version Not Supported"
};
StatusError.VariantAlsoNegotiates = {
    statusCode: 506,
    message: "Variant Also Negotiates"
};
StatusError.InsufficientStorage = {
    statusCode: 507,
    message: "Insufficient Storage"
};
StatusError.LoopDetected = {
    statusCode: 508,
    message: "Loop Detected"
};
StatusError.NotExtended = {
    statusCode: 510,
    message: "Not Extended"
};
StatusError.NetworkAuthenticationRequired = {
    statusCode: 511,
    message: "Network Authentication Required"
};
StatusError.prototype.name = "StatusError";
;
 //# sourceMappingURL=errors.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/known-errors.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/known-errors.tsx
__turbopack_context__.s({
    "KnownError": ()=>KnownError,
    "KnownErrors": ()=>KnownErrors
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_tagged_template_literal.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$functions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/functions.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js [app-client] (ecmascript)");
;
function _templateObject() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "\n          Overload ",
        ": ",
        "\n        "
    ]);
    _templateObject = function() {
        return data;
    };
    return data;
}
function _templateObject1() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "\n      This endpoint has multiple overloads, but they all failed to process the request.\n\n        ",
        "\n    "
    ]);
    _templateObject1 = function() {
        return data;
    };
    return data;
}
function _templateObject2() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "\n      The x-stack-access-type header was '",
        "', but the x-stack-project-id header was not provided.\n      \n      For more information, see the docs on REST API authentication: https://docs.stack-auth.com/rest-api/overview#authentication\n    "
    ]);
    _templateObject2 = function() {
        return data;
    };
    return data;
}
function _templateObject3() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "\n      You must specify an access level for this Stack project. Make sure project API keys are provided (eg. x-stack-publishable-client-key) and you set the x-stack-access-type header to 'client', 'server', or 'admin'.\n      \n      For more information, see the docs on REST API authentication: https://docs.stack-auth.com/rest-api/overview#authentication\n    "
    ]);
    _templateObject3 = function() {
        return data;
    };
    return data;
}
;
;
;
var KnownError = class extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StatusError"] {
    static isKnownError(error) {
        return typeof error === "object" && error !== null && "__stackKnownErrorBrand" in error && error.__stackKnownErrorBrand === "stack-known-error-brand-sentinel";
    }
    getBody() {
        return new TextEncoder().encode(JSON.stringify(this.toDescriptiveJson(), void 0, 2));
    }
    getHeaders() {
        return {
            "Content-Type": [
                "application/json; charset=utf-8"
            ],
            "X-Stack-Known-Error": [
                this.errorCode
            ]
        };
    }
    toDescriptiveJson() {
        return {
            code: this.errorCode,
            ...this.details ? {
                details: this.details
            } : {},
            error: this.humanReadableMessage
        };
    }
    get errorCode() {
        var _this_constructor_errorCode;
        return (_this_constructor_errorCode = this.constructor.errorCode) !== null && _this_constructor_errorCode !== void 0 ? _this_constructor_errorCode : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["throwErr"])("Can't find error code for this KnownError. Is its constructor a KnownErrorConstructor? ".concat(this));
    }
    static constructorArgsFromJson(json) {
        return [
            400,
            json.message,
            json
        ];
    }
    static fromJson(json) {
        for (const [_, KnownErrorType] of Object.entries(KnownErrors)){
            if (json.code === KnownErrorType.prototype.errorCode) {
                const constructorArgs = KnownErrorType.constructorArgsFromJson(json);
                return new KnownErrorType(...constructorArgs);
            }
        }
        throw new Error("Unknown KnownError code. You may need to update your version of Stack to see more detailed information. ".concat(json.code, ": ").concat(json.message));
    }
    constructor(statusCode, humanReadableMessage, details){
        super(statusCode, humanReadableMessage);
        this.statusCode = statusCode;
        this.humanReadableMessage = humanReadableMessage;
        this.details = details;
        this.__stackKnownErrorBrand = "stack-known-error-brand-sentinel";
        this.name = "KnownError";
    }
};
var knownErrorConstructorErrorCodeSentinel = Symbol("knownErrorConstructorErrorCodeSentinel");
function createKnownErrorConstructor(SuperClass, errorCode, create, constructorArgsFromJson) {
    const createFn = create === "inherit" ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$functions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identityArgs"] : create;
    const constructorArgsFromJsonFn = constructorArgsFromJson === "inherit" ? SuperClass.constructorArgsFromJson : constructorArgsFromJson;
    class KnownErrorImpl extends SuperClass {
        static constructorArgsFromJson(json) {
            return constructorArgsFromJsonFn(json.details);
        }
        static isInstance(error) {
            if (!KnownError.isKnownError(error)) return false;
            let current = error;
            while(true){
                current = Object.getPrototypeOf(current);
                if (!current) break;
                if ("errorCode" in current.constructor && current.constructor.errorCode === errorCode) return true;
            }
            return false;
        }
        constructor(...args){
            super(...createFn(...args));
            this.name = "KnownError<".concat(errorCode, ">");
            this.constructorArgs = args;
        }
    }
    KnownErrorImpl.errorCode = errorCode;
    ;
    return KnownErrorImpl;
}
var UnsupportedError = createKnownErrorConstructor(KnownError, "UNSUPPORTED_ERROR", (originalErrorCode)=>[
        500,
        "An error occurred that is not currently supported (possibly because it was added in a version of Stack that is newer than this client). The original unsupported error code was: ".concat(originalErrorCode),
        {
            originalErrorCode
        }
    ], (json)=>{
    var _json_originalErrorCode;
    return [
        (_json_originalErrorCode = json === null || json === void 0 ? void 0 : json.originalErrorCode) !== null && _json_originalErrorCode !== void 0 ? _json_originalErrorCode : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["throwErr"])("originalErrorCode not found in UnsupportedError details")
    ];
});
var BodyParsingError = createKnownErrorConstructor(KnownError, "BODY_PARSING_ERROR", (message)=>[
        400,
        message
    ], (json)=>[
        json.message
    ]);
var SchemaError = createKnownErrorConstructor(KnownError, "SCHEMA_ERROR", (message)=>[
        400,
        message || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["throwErr"])("SchemaError requires a message"),
        {
            message
        }
    ], (json)=>[
        json.message
    ]);
var AllOverloadsFailed = createKnownErrorConstructor(KnownError, "ALL_OVERLOADS_FAILED", (overloadErrors)=>[
        400,
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deindent"])(_templateObject1(), overloadErrors.map((e, i)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deindent"])(_templateObject(), i + 1, JSON.stringify(e, void 0, 2))).join("\n\n")),
        {
            overload_errors: overloadErrors
        }
    ], (json)=>{
    var _json_overload_errors;
    return [
        (_json_overload_errors = json === null || json === void 0 ? void 0 : json.overload_errors) !== null && _json_overload_errors !== void 0 ? _json_overload_errors : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["throwErr"])("overload_errors not found in AllOverloadsFailed details")
    ];
});
var ProjectAuthenticationError = createKnownErrorConstructor(KnownError, "PROJECT_AUTHENTICATION_ERROR", "inherit", "inherit");
var InvalidProjectAuthentication = createKnownErrorConstructor(ProjectAuthenticationError, "INVALID_PROJECT_AUTHENTICATION", "inherit", "inherit");
var ProjectKeyWithoutAccessType = createKnownErrorConstructor(InvalidProjectAuthentication, "PROJECT_KEY_WITHOUT_ACCESS_TYPE", ()=>[
        400,
        "Either an API key or an admin access token was provided, but the x-stack-access-type header is missing. Set it to 'client', 'server', or 'admin' as appropriate."
    ], ()=>[]);
var InvalidAccessType = createKnownErrorConstructor(InvalidProjectAuthentication, "INVALID_ACCESS_TYPE", (accessType)=>[
        400,
        "The x-stack-access-type header must be 'client', 'server', or 'admin', but was '".concat(accessType, "'.")
    ], (json)=>{
    var _json_accessType;
    return [
        (_json_accessType = json === null || json === void 0 ? void 0 : json.accessType) !== null && _json_accessType !== void 0 ? _json_accessType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["throwErr"])("accessType not found in InvalidAccessType details")
    ];
});
var AccessTypeWithoutProjectId = createKnownErrorConstructor(InvalidProjectAuthentication, "ACCESS_TYPE_WITHOUT_PROJECT_ID", (accessType)=>[
        400,
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deindent"])(_templateObject2(), accessType),
        {
            request_type: accessType
        }
    ], (json)=>[
        json.request_type
    ]);
var AccessTypeRequired = createKnownErrorConstructor(InvalidProjectAuthentication, "ACCESS_TYPE_REQUIRED", ()=>[
        400,
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deindent"])(_templateObject3())
    ], ()=>[]);
var InsufficientAccessType = createKnownErrorConstructor(InvalidProjectAuthentication, "INSUFFICIENT_ACCESS_TYPE", (actualAccessType, allowedAccessTypes)=>[
        401,
        "The x-stack-access-type header must be ".concat(allowedAccessTypes.map((s)=>"'".concat(s, "'")).join(" or "), ", but was '").concat(actualAccessType, "'."),
        {
            actual_access_type: actualAccessType,
            allowed_access_types: allowedAccessTypes
        }
    ], (json)=>[
        json.actual_access_type,
        json.allowed_access_types
    ]);
var InvalidPublishableClientKey = createKnownErrorConstructor(InvalidProjectAuthentication, "INVALID_PUBLISHABLE_CLIENT_KEY", (projectId)=>[
        401,
        "The publishable key is not valid for the project ".concat(JSON.stringify(projectId), ". Does the project and/or the key exist?"),
        {
            project_id: projectId
        }
    ], (json)=>[
        json.project_id
    ]);
var InvalidSecretServerKey = createKnownErrorConstructor(InvalidProjectAuthentication, "INVALID_SECRET_SERVER_KEY", (projectId)=>[
        401,
        "The secret server key is not valid for the project ".concat(JSON.stringify(projectId), ". Does the project and/or the key exist?"),
        {
            project_id: projectId
        }
    ], (json)=>[
        json.project_id
    ]);
var InvalidSuperSecretAdminKey = createKnownErrorConstructor(InvalidProjectAuthentication, "INVALID_SUPER_SECRET_ADMIN_KEY", (projectId)=>[
        401,
        "The super secret admin key is not valid for the project ".concat(JSON.stringify(projectId), ". Does the project and/or the key exist?"),
        {
            project_id: projectId
        }
    ], (json)=>[
        json.project_id
    ]);
var InvalidAdminAccessToken = createKnownErrorConstructor(InvalidProjectAuthentication, "INVALID_ADMIN_ACCESS_TOKEN", "inherit", "inherit");
var UnparsableAdminAccessToken = createKnownErrorConstructor(InvalidAdminAccessToken, "UNPARSABLE_ADMIN_ACCESS_TOKEN", ()=>[
        401,
        "Admin access token is not parsable."
    ], ()=>[]);
var AdminAccessTokenExpired = createKnownErrorConstructor(InvalidAdminAccessToken, "ADMIN_ACCESS_TOKEN_EXPIRED", (expiredAt)=>{
    var _expiredAt_getTime;
    return [
        401,
        "Admin access token has expired. Please refresh it and try again.".concat(expiredAt ? " (The access token expired at ".concat(expiredAt.toISOString(), ".)") : ""),
        {
            expired_at_millis: (_expiredAt_getTime = expiredAt === null || expiredAt === void 0 ? void 0 : expiredAt.getTime()) !== null && _expiredAt_getTime !== void 0 ? _expiredAt_getTime : null
        }
    ];
}, (json)=>{
    var _json_expired_at_millis;
    return [
        (_json_expired_at_millis = json.expired_at_millis) !== null && _json_expired_at_millis !== void 0 ? _json_expired_at_millis : void 0
    ];
});
var InvalidProjectForAdminAccessToken = createKnownErrorConstructor(InvalidAdminAccessToken, "INVALID_PROJECT_FOR_ADMIN_ACCESS_TOKEN", ()=>[
        401,
        "Admin access tokens must be created on the internal project."
    ], ()=>[]);
var AdminAccessTokenIsNotAdmin = createKnownErrorConstructor(InvalidAdminAccessToken, "ADMIN_ACCESS_TOKEN_IS_NOT_ADMIN", ()=>[
        401,
        "Admin access token does not have the required permissions to access this project."
    ], ()=>[]);
var ProjectAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationError, "PROJECT_AUTHENTICATION_REQUIRED", "inherit", "inherit");
var ClientAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, "CLIENT_AUTHENTICATION_REQUIRED", ()=>[
        401,
        "The publishable client key must be provided."
    ], ()=>[]);
var ServerAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, "SERVER_AUTHENTICATION_REQUIRED", ()=>[
        401,
        "The secret server key must be provided."
    ], ()=>[]);
var ClientOrServerAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, "CLIENT_OR_SERVER_AUTHENTICATION_REQUIRED", ()=>[
        401,
        "Either the publishable client key or the secret server key must be provided."
    ], ()=>[]);
var ClientOrAdminAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, "CLIENT_OR_ADMIN_AUTHENTICATION_REQUIRED", ()=>[
        401,
        "Either the publishable client key or the super secret admin key must be provided."
    ], ()=>[]);
var ClientOrServerOrAdminAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, "CLIENT_OR_SERVER_OR_ADMIN_AUTHENTICATION_REQUIRED", ()=>[
        401,
        "Either the publishable client key, the secret server key, or the super secret admin key must be provided."
    ], ()=>[]);
var AdminAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, "ADMIN_AUTHENTICATION_REQUIRED", ()=>[
        401,
        "The super secret admin key must be provided."
    ], ()=>[]);
var ExpectedInternalProject = createKnownErrorConstructor(ProjectAuthenticationError, "EXPECTED_INTERNAL_PROJECT", ()=>[
        401,
        "The project ID is expected to be internal."
    ], ()=>[]);
var SessionAuthenticationError = createKnownErrorConstructor(KnownError, "SESSION_AUTHENTICATION_ERROR", "inherit", "inherit");
var InvalidSessionAuthentication = createKnownErrorConstructor(SessionAuthenticationError, "INVALID_SESSION_AUTHENTICATION", "inherit", "inherit");
var InvalidAccessToken = createKnownErrorConstructor(InvalidSessionAuthentication, "INVALID_ACCESS_TOKEN", "inherit", "inherit");
var UnparsableAccessToken = createKnownErrorConstructor(InvalidAccessToken, "UNPARSABLE_ACCESS_TOKEN", ()=>[
        401,
        "Access token is not parsable."
    ], ()=>[]);
var AccessTokenExpired = createKnownErrorConstructor(InvalidAccessToken, "ACCESS_TOKEN_EXPIRED", (expiredAt)=>{
    var _expiredAt_getTime;
    return [
        401,
        "Access token has expired. Please refresh it and try again.".concat(expiredAt ? " (The access token expired at ".concat(expiredAt.toISOString(), ".)") : ""),
        {
            expired_at_millis: (_expiredAt_getTime = expiredAt === null || expiredAt === void 0 ? void 0 : expiredAt.getTime()) !== null && _expiredAt_getTime !== void 0 ? _expiredAt_getTime : null
        }
    ];
}, (json)=>[
        json.expired_at_millis ? new Date(json.expired_at_millis) : void 0
    ]);
var InvalidProjectForAccessToken = createKnownErrorConstructor(InvalidAccessToken, "INVALID_PROJECT_FOR_ACCESS_TOKEN", (expectedProjectId, actualProjectId)=>[
        401,
        "Access token not valid for this project. Expected project ID ".concat(JSON.stringify(expectedProjectId), ", but the token is for project ID ").concat(JSON.stringify(actualProjectId), "."),
        {
            expected_project_id: expectedProjectId,
            actual_project_id: actualProjectId
        }
    ], (json)=>[
        json.expected_project_id,
        json.actual_project_id
    ]);
var RefreshTokenError = createKnownErrorConstructor(KnownError, "REFRESH_TOKEN_ERROR", "inherit", "inherit");
var RefreshTokenNotFoundOrExpired = createKnownErrorConstructor(RefreshTokenError, "REFRESH_TOKEN_NOT_FOUND_OR_EXPIRED", ()=>[
        401,
        "Refresh token not found for this project, or the session has expired/been revoked."
    ], ()=>[]);
var CannotDeleteCurrentSession = createKnownErrorConstructor(RefreshTokenError, "CANNOT_DELETE_CURRENT_SESSION", ()=>[
        400,
        "Cannot delete the current session."
    ], ()=>[]);
var ProviderRejected = createKnownErrorConstructor(RefreshTokenError, "PROVIDER_REJECTED", ()=>[
        401,
        "The provider refused to refresh their token. This usually means that the provider used to authenticate the user no longer regards this session as valid, and the user must re-authenticate."
    ], ()=>[]);
var UserWithEmailAlreadyExists = createKnownErrorConstructor(KnownError, "USER_EMAIL_ALREADY_EXISTS", function(email) {
    let wouldWorkIfEmailWasVerified = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
    return [
        409,
        "A user with email ".concat(JSON.stringify(email), " already exists").concat(wouldWorkIfEmailWasVerified ? " but the email is not verified. Please login to your existing account with the method you used to sign up, and then verify your email to sign in with this login method." : "."),
        {
            email,
            would_work_if_email_was_verified: wouldWorkIfEmailWasVerified
        }
    ];
}, (json)=>{
    var _json_would_work_if_email_was_verified;
    return [
        json.email,
        (_json_would_work_if_email_was_verified = json.would_work_if_email_was_verified) !== null && _json_would_work_if_email_was_verified !== void 0 ? _json_would_work_if_email_was_verified : false
    ];
});
var EmailNotVerified = createKnownErrorConstructor(KnownError, "EMAIL_NOT_VERIFIED", ()=>[
        400,
        "The email is not verified."
    ], ()=>[]);
var CannotGetOwnUserWithoutUser = createKnownErrorConstructor(KnownError, "CANNOT_GET_OWN_USER_WITHOUT_USER", ()=>[
        400,
        "You have specified 'me' as a userId, but did not provide authentication for a user."
    ], ()=>[]);
var UserIdDoesNotExist = createKnownErrorConstructor(KnownError, "USER_ID_DOES_NOT_EXIST", (userId)=>[
        400,
        "The given user with the ID ".concat(userId, " does not exist."),
        {
            user_id: userId
        }
    ], (json)=>[
        json.user_id
    ]);
var UserNotFound = createKnownErrorConstructor(KnownError, "USER_NOT_FOUND", ()=>[
        404,
        "User not found."
    ], ()=>[]);
var ProjectNotFound = createKnownErrorConstructor(KnownError, "PROJECT_NOT_FOUND", (projectId)=>{
    if (typeof projectId !== "string") throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("projectId of KnownErrors.ProjectNotFound must be a string");
    return [
        404,
        "Project ".concat(projectId, " not found or is not accessible with the current user."),
        {
            project_id: projectId
        }
    ];
}, (json)=>[
        json.project_id
    ]);
var CurrentProjectNotFound = createKnownErrorConstructor(KnownError, "CURRENT_PROJECT_NOT_FOUND", (projectId)=>[
        400,
        "The current project with ID ".concat(projectId, " was not found. Please check the value of the x-stack-project-id header."),
        {
            project_id: projectId
        }
    ], (json)=>[
        json.project_id
    ]);
var BranchDoesNotExist = createKnownErrorConstructor(KnownError, "BRANCH_DOES_NOT_EXIST", (branchId)=>[
        400,
        "The branch with ID ".concat(branchId, " does not exist."),
        {
            branch_id: branchId
        }
    ], (json)=>[
        json.branch_id
    ]);
var SignUpNotEnabled = createKnownErrorConstructor(KnownError, "SIGN_UP_NOT_ENABLED", ()=>[
        400,
        "Creation of new accounts is not enabled for this project. Please ask the project owner to enable it."
    ], ()=>[]);
var PasswordAuthenticationNotEnabled = createKnownErrorConstructor(KnownError, "PASSWORD_AUTHENTICATION_NOT_ENABLED", ()=>[
        400,
        "Password authentication is not enabled for this project."
    ], ()=>[]);
var PasskeyAuthenticationNotEnabled = createKnownErrorConstructor(KnownError, "PASSKEY_AUTHENTICATION_NOT_ENABLED", ()=>[
        400,
        "Passkey authentication is not enabled for this project."
    ], ()=>[]);
var AnonymousAccountsNotEnabled = createKnownErrorConstructor(KnownError, "ANONYMOUS_ACCOUNTS_NOT_ENABLED", ()=>[
        400,
        "Anonymous accounts are not enabled for this project."
    ], ()=>[]);
var EmailPasswordMismatch = createKnownErrorConstructor(KnownError, "EMAIL_PASSWORD_MISMATCH", ()=>[
        400,
        "Wrong e-mail or password."
    ], ()=>[]);
var RedirectUrlNotWhitelisted = createKnownErrorConstructor(KnownError, "REDIRECT_URL_NOT_WHITELISTED", ()=>[
        400,
        "Redirect URL not whitelisted. Did you forget to add this domain to the trusted domains list on the Stack Auth dashboard?"
    ], ()=>[]);
var PasswordRequirementsNotMet = createKnownErrorConstructor(KnownError, "PASSWORD_REQUIREMENTS_NOT_MET", "inherit", "inherit");
var PasswordTooShort = createKnownErrorConstructor(PasswordRequirementsNotMet, "PASSWORD_TOO_SHORT", (minLength)=>[
        400,
        "Password too short. Minimum length is ".concat(minLength, "."),
        {
            min_length: minLength
        }
    ], (json)=>{
    var _json_min_length;
    return [
        (_json_min_length = json === null || json === void 0 ? void 0 : json.min_length) !== null && _json_min_length !== void 0 ? _json_min_length : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["throwErr"])("min_length not found in PasswordTooShort details")
    ];
});
var PasswordTooLong = createKnownErrorConstructor(PasswordRequirementsNotMet, "PASSWORD_TOO_LONG", (maxLength)=>[
        400,
        "Password too long. Maximum length is ".concat(maxLength, "."),
        {
            maxLength
        }
    ], (json)=>{
    var _json_maxLength;
    return [
        (_json_maxLength = json === null || json === void 0 ? void 0 : json.maxLength) !== null && _json_maxLength !== void 0 ? _json_maxLength : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["throwErr"])("maxLength not found in PasswordTooLong details")
    ];
});
var UserDoesNotHavePassword = createKnownErrorConstructor(KnownError, "USER_DOES_NOT_HAVE_PASSWORD", ()=>[
        400,
        "This user does not have password authentication enabled."
    ], ()=>[]);
var VerificationCodeError = createKnownErrorConstructor(KnownError, "VERIFICATION_ERROR", "inherit", "inherit");
var VerificationCodeNotFound = createKnownErrorConstructor(VerificationCodeError, "VERIFICATION_CODE_NOT_FOUND", ()=>[
        404,
        "The verification code does not exist for this project."
    ], ()=>[]);
var VerificationCodeExpired = createKnownErrorConstructor(VerificationCodeError, "VERIFICATION_CODE_EXPIRED", ()=>[
        400,
        "The verification code has expired."
    ], ()=>[]);
var VerificationCodeAlreadyUsed = createKnownErrorConstructor(VerificationCodeError, "VERIFICATION_CODE_ALREADY_USED", ()=>[
        409,
        "The verification link has already been used."
    ], ()=>[]);
var VerificationCodeMaxAttemptsReached = createKnownErrorConstructor(VerificationCodeError, "VERIFICATION_CODE_MAX_ATTEMPTS_REACHED", ()=>[
        400,
        "The verification code nonce has reached the maximum number of attempts. This code is not valid anymore."
    ], ()=>[]);
var PasswordConfirmationMismatch = createKnownErrorConstructor(KnownError, "PASSWORD_CONFIRMATION_MISMATCH", ()=>[
        400,
        "Passwords do not match."
    ], ()=>[]);
var EmailAlreadyVerified = createKnownErrorConstructor(KnownError, "EMAIL_ALREADY_VERIFIED", ()=>[
        409,
        "The e-mail is already verified."
    ], ()=>[]);
var EmailNotAssociatedWithUser = createKnownErrorConstructor(KnownError, "EMAIL_NOT_ASSOCIATED_WITH_USER", ()=>[
        400,
        "The e-mail is not associated with a user that could log in with that e-mail."
    ], ()=>[]);
var EmailIsNotPrimaryEmail = createKnownErrorConstructor(KnownError, "EMAIL_IS_NOT_PRIMARY_EMAIL", (email, primaryEmail)=>[
        400,
        "The given e-mail (".concat(email, ") must equal the user's primary e-mail (").concat(primaryEmail, ")."),
        {
            email,
            primary_email: primaryEmail
        }
    ], (json)=>[
        json.email,
        json.primary_email
    ]);
var PasskeyRegistrationFailed = createKnownErrorConstructor(KnownError, "PASSKEY_REGISTRATION_FAILED", (message)=>[
        400,
        message
    ], (json)=>[
        json.message
    ]);
var PasskeyWebAuthnError = createKnownErrorConstructor(KnownError, "PASSKEY_WEBAUTHN_ERROR", (message, code)=>[
        400,
        message,
        {
            message,
            code
        }
    ], (json)=>[
        json.message,
        json.code
    ]);
var PasskeyAuthenticationFailed = createKnownErrorConstructor(KnownError, "PASSKEY_AUTHENTICATION_FAILED", (message)=>[
        400,
        message
    ], (json)=>[
        json.message
    ]);
var PermissionNotFound = createKnownErrorConstructor(KnownError, "PERMISSION_NOT_FOUND", (permissionId)=>[
        404,
        'Permission "'.concat(permissionId, '" not found. Make sure you created it on the dashboard.'),
        {
            permission_id: permissionId
        }
    ], (json)=>[
        json.permission_id
    ]);
var PermissionScopeMismatch = createKnownErrorConstructor(KnownError, "WRONG_PERMISSION_SCOPE", (permissionId, expectedScope, actualScope)=>[
        404,
        "Permission ".concat(JSON.stringify(permissionId), " not found. (It was found for a different scope ").concat(JSON.stringify(actualScope), ", but scope ").concat(JSON.stringify(expectedScope), " was expected.)"),
        {
            permission_id: permissionId,
            expected_scope: expectedScope,
            actual_scope: actualScope
        }
    ], (json)=>[
        json.permission_id,
        json.expected_scope,
        json.actual_scope
    ]);
var ContainedPermissionNotFound = createKnownErrorConstructor(KnownError, "CONTAINED_PERMISSION_NOT_FOUND", (permissionId)=>[
        400,
        'Contained permission with ID "'.concat(permissionId, '" not found. Make sure you created it on the dashboard.'),
        {
            permission_id: permissionId
        }
    ], (json)=>[
        json.permission_id
    ]);
var TeamNotFound = createKnownErrorConstructor(KnownError, "TEAM_NOT_FOUND", (teamId)=>[
        404,
        "Team ".concat(teamId, " not found."),
        {
            team_id: teamId
        }
    ], (json)=>[
        json.team_id
    ]);
var TeamAlreadyExists = createKnownErrorConstructor(KnownError, "TEAM_ALREADY_EXISTS", (teamId)=>[
        409,
        "Team ".concat(teamId, " already exists."),
        {
            team_id: teamId
        }
    ], (json)=>[
        json.team_id
    ]);
var TeamMembershipNotFound = createKnownErrorConstructor(KnownError, "TEAM_MEMBERSHIP_NOT_FOUND", (teamId, userId)=>[
        404,
        "User ".concat(userId, " is not found in team ").concat(teamId, "."),
        {
            team_id: teamId,
            user_id: userId
        }
    ], (json)=>[
        json.team_id,
        json.user_id
    ]);
var EmailTemplateAlreadyExists = createKnownErrorConstructor(KnownError, "EMAIL_TEMPLATE_ALREADY_EXISTS", ()=>[
        409,
        "Email template already exists."
    ], ()=>[]);
var OAuthConnectionNotConnectedToUser = createKnownErrorConstructor(KnownError, "OAUTH_CONNECTION_NOT_CONNECTED_TO_USER", ()=>[
        400,
        "The OAuth connection is not connected to any user."
    ], ()=>[]);
var OAuthConnectionAlreadyConnectedToAnotherUser = createKnownErrorConstructor(KnownError, "OAUTH_CONNECTION_ALREADY_CONNECTED_TO_ANOTHER_USER", ()=>[
        409,
        "The OAuth connection is already connected to another user."
    ], ()=>[]);
var OAuthConnectionDoesNotHaveRequiredScope = createKnownErrorConstructor(KnownError, "OAUTH_CONNECTION_DOES_NOT_HAVE_REQUIRED_SCOPE", ()=>[
        400,
        "The OAuth connection does not have the required scope."
    ], ()=>[]);
var OAuthExtraScopeNotAvailableWithSharedOAuthKeys = createKnownErrorConstructor(KnownError, "OAUTH_EXTRA_SCOPE_NOT_AVAILABLE_WITH_SHARED_OAUTH_KEYS", ()=>[
        400,
        "Extra scopes are not available with shared OAuth keys. Please add your own OAuth keys on the Stack dashboard to use extra scopes."
    ], ()=>[]);
var OAuthAccessTokenNotAvailableWithSharedOAuthKeys = createKnownErrorConstructor(KnownError, "OAUTH_ACCESS_TOKEN_NOT_AVAILABLE_WITH_SHARED_OAUTH_KEYS", ()=>[
        400,
        "Access tokens are not available with shared OAuth keys. Please add your own OAuth keys on the Stack dashboard to use access tokens."
    ], ()=>[]);
var InvalidOAuthClientIdOrSecret = createKnownErrorConstructor(KnownError, "INVALID_OAUTH_CLIENT_ID_OR_SECRET", (clientId)=>[
        400,
        "The OAuth client ID or secret is invalid. The client ID must be equal to the project ID (potentially with a hash and a branch ID), and the client secret must be a publishable client key.",
        {
            client_id: clientId !== null && clientId !== void 0 ? clientId : null
        }
    ], (json)=>{
    var _json_client_id;
    return [
        (_json_client_id = json.client_id) !== null && _json_client_id !== void 0 ? _json_client_id : void 0
    ];
});
var InvalidScope = createKnownErrorConstructor(KnownError, "INVALID_SCOPE", (scope)=>[
        400,
        'The scope "'.concat(scope, '" is not a valid OAuth scope for Stack.')
    ], (json)=>[
        json.scope
    ]);
var UserAlreadyConnectedToAnotherOAuthConnection = createKnownErrorConstructor(KnownError, "USER_ALREADY_CONNECTED_TO_ANOTHER_OAUTH_CONNECTION", ()=>[
        409,
        "The user is already connected to another OAuth account. Did you maybe selected the wrong account?"
    ], ()=>[]);
var OuterOAuthTimeout = createKnownErrorConstructor(KnownError, "OUTER_OAUTH_TIMEOUT", ()=>[
        408,
        "The OAuth flow has timed out. Please sign in again."
    ], ()=>[]);
var OAuthProviderNotFoundOrNotEnabled = createKnownErrorConstructor(KnownError, "OAUTH_PROVIDER_NOT_FOUND_OR_NOT_ENABLED", ()=>[
        400,
        "The OAuth provider is not found or not enabled."
    ], ()=>[]);
var OAuthProviderAccountIdAlreadyUsedForSignIn = createKnownErrorConstructor(KnownError, "OAUTH_PROVIDER_ACCOUNT_ID_ALREADY_USED_FOR_SIGN_IN", ()=>[
        400,
        "A provider with the same account ID is already used for signing in."
    ], ()=>[]);
var MultiFactorAuthenticationRequired = createKnownErrorConstructor(KnownError, "MULTI_FACTOR_AUTHENTICATION_REQUIRED", (attemptCode)=>[
        400,
        "Multi-factor authentication is required for this user.",
        {
            attempt_code: attemptCode
        }
    ], (json)=>[
        json.attempt_code
    ]);
var InvalidTotpCode = createKnownErrorConstructor(KnownError, "INVALID_TOTP_CODE", ()=>[
        400,
        "The TOTP code is invalid. Please try again."
    ], ()=>[]);
var UserAuthenticationRequired = createKnownErrorConstructor(KnownError, "USER_AUTHENTICATION_REQUIRED", ()=>[
        401,
        "User authentication required for this endpoint."
    ], ()=>[]);
var TeamMembershipAlreadyExists = createKnownErrorConstructor(KnownError, "TEAM_MEMBERSHIP_ALREADY_EXISTS", ()=>[
        409,
        "Team membership already exists."
    ], ()=>[]);
var ProjectPermissionRequired = createKnownErrorConstructor(KnownError, "PROJECT_PERMISSION_REQUIRED", (userId, permissionId)=>[
        401,
        "User ".concat(userId, " does not have permission ").concat(permissionId, "."),
        {
            user_id: userId,
            permission_id: permissionId
        }
    ], (json)=>[
        json.user_id,
        json.permission_id
    ]);
var TeamPermissionRequired = createKnownErrorConstructor(KnownError, "TEAM_PERMISSION_REQUIRED", (teamId, userId, permissionId)=>[
        401,
        "User ".concat(userId, " does not have permission ").concat(permissionId, " in team ").concat(teamId, "."),
        {
            team_id: teamId,
            user_id: userId,
            permission_id: permissionId
        }
    ], (json)=>[
        json.team_id,
        json.user_id,
        json.permission_id
    ]);
var TeamPermissionNotFound = createKnownErrorConstructor(KnownError, "TEAM_PERMISSION_NOT_FOUND", (teamId, userId, permissionId)=>[
        401,
        "User ".concat(userId, " does not have permission ").concat(permissionId, " in team ").concat(teamId, "."),
        {
            team_id: teamId,
            user_id: userId,
            permission_id: permissionId
        }
    ], (json)=>[
        json.team_id,
        json.user_id,
        json.permission_id
    ]);
var InvalidSharedOAuthProviderId = createKnownErrorConstructor(KnownError, "INVALID_SHARED_OAUTH_PROVIDER_ID", (providerId)=>[
        400,
        "The shared OAuth provider with ID ".concat(providerId, " is not valid."),
        {
            provider_id: providerId
        }
    ], (json)=>[
        json.provider_id
    ]);
var InvalidStandardOAuthProviderId = createKnownErrorConstructor(KnownError, "INVALID_STANDARD_OAUTH_PROVIDER_ID", (providerId)=>[
        400,
        "The standard OAuth provider with ID ".concat(providerId, " is not valid."),
        {
            provider_id: providerId
        }
    ], (json)=>[
        json.provider_id
    ]);
var InvalidAuthorizationCode = createKnownErrorConstructor(KnownError, "INVALID_AUTHORIZATION_CODE", ()=>[
        400,
        "The given authorization code is invalid."
    ], ()=>[]);
var OAuthProviderAccessDenied = createKnownErrorConstructor(KnownError, "OAUTH_PROVIDER_ACCESS_DENIED", ()=>[
        400,
        "The OAuth provider denied access to the user."
    ], ()=>[]);
var ContactChannelAlreadyUsedForAuthBySomeoneElse = createKnownErrorConstructor(KnownError, "CONTACT_CHANNEL_ALREADY_USED_FOR_AUTH_BY_SOMEONE_ELSE", function(type, contactChannelValue) {
    let wouldWorkIfEmailWasVerified = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
    return [
        409,
        "This ".concat(type, " ").concat(contactChannelValue ? '"('.concat(contactChannelValue, ')"') : "", " is already used for authentication by another account").concat(wouldWorkIfEmailWasVerified ? " but the email is not verified. Please login to your existing account with the method you used to sign up, and then verify your email to sign in with this login method." : "."),
        {
            type,
            contact_channel_value: contactChannelValue !== null && contactChannelValue !== void 0 ? contactChannelValue : null,
            would_work_if_email_was_verified: wouldWorkIfEmailWasVerified
        }
    ];
}, (json)=>{
    var _json_would_work_if_email_was_verified;
    return [
        json.type,
        json.contact_channel_value,
        (_json_would_work_if_email_was_verified = json.would_work_if_email_was_verified) !== null && _json_would_work_if_email_was_verified !== void 0 ? _json_would_work_if_email_was_verified : false
    ];
});
var InvalidPollingCodeError = createKnownErrorConstructor(KnownError, "INVALID_POLLING_CODE", (details)=>[
        400,
        "The polling code is invalid or does not exist.",
        details
    ], (json)=>[
        json
    ]);
var CliAuthError = createKnownErrorConstructor(KnownError, "CLI_AUTH_ERROR", (message)=>[
        400,
        message
    ], (json)=>[
        json.message
    ]);
var CliAuthExpiredError = createKnownErrorConstructor(KnownError, "CLI_AUTH_EXPIRED_ERROR", function() {
    let message = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "CLI authentication request expired. Please try again.";
    return [
        400,
        message
    ];
}, (json)=>[
        json.message
    ]);
var CliAuthUsedError = createKnownErrorConstructor(KnownError, "CLI_AUTH_USED_ERROR", function() {
    let message = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "This authentication token has already been used.";
    return [
        400,
        message
    ];
}, (json)=>[
        json.message
    ]);
var ApiKeyNotValid = createKnownErrorConstructor(KnownError, "API_KEY_NOT_VALID", "inherit", "inherit");
var ApiKeyExpired = createKnownErrorConstructor(ApiKeyNotValid, "API_KEY_EXPIRED", ()=>[
        401,
        "API key has expired."
    ], ()=>[]);
var ApiKeyRevoked = createKnownErrorConstructor(ApiKeyNotValid, "API_KEY_REVOKED", ()=>[
        401,
        "API key has been revoked."
    ], ()=>[]);
var WrongApiKeyType = createKnownErrorConstructor(ApiKeyNotValid, "WRONG_API_KEY_TYPE", (expectedType, actualType)=>[
        400,
        "This endpoint is for ".concat(expectedType, " API keys, but a ").concat(actualType, " API key was provided."),
        {
            expected_type: expectedType,
            actual_type: actualType
        }
    ], (json)=>[
        json.expected_type,
        json.actual_type
    ]);
var ApiKeyNotFound = createKnownErrorConstructor(ApiKeyNotValid, "API_KEY_NOT_FOUND", ()=>[
        404,
        "API key not found."
    ], ()=>[]);
var PublicApiKeyCannotBeRevoked = createKnownErrorConstructor(ApiKeyNotValid, "PUBLIC_API_KEY_CANNOT_BE_REVOKED", ()=>[
        400,
        "Public API keys cannot be revoked by the secretscanner endpoint."
    ], ()=>[]);
var PermissionIdAlreadyExists = createKnownErrorConstructor(KnownError, "PERMISSION_ID_ALREADY_EXISTS", (permissionId)=>[
        400,
        'Permission with ID "'.concat(permissionId, '" already exists. Choose a different ID.'),
        {
            permission_id: permissionId
        }
    ], (json)=>[
        json.permission_id
    ]);
var EmailRenderingError = createKnownErrorConstructor(KnownError, "EMAIL_RENDERING_ERROR", (error)=>[
        400,
        "Failed to render email with theme: ".concat(error),
        {
            error
        }
    ], (json)=>[
        json.error
    ]);
var RequiresCustomEmailServer = createKnownErrorConstructor(KnownError, "REQUIRES_CUSTOM_EMAIL_SERVER", ()=>[
        400,
        "This action requires a custom SMTP server. Please edit your email server configuration and try again."
    ], ()=>[]);
var ItemNotFound = createKnownErrorConstructor(KnownError, "ITEM_NOT_FOUND", (itemId)=>[
        404,
        'Item with ID "'.concat(itemId, '" not found.'),
        {
            item_id: itemId
        }
    ], (json)=>[
        json.item_id
    ]);
var ItemCustomerTypeDoesNotMatch = createKnownErrorConstructor(KnownError, "ITEM_CUSTOMER_TYPE_DOES_NOT_MATCH", (itemId, customerId, itemCustomerType, actualCustomerType)=>[
        400,
        "The ".concat(actualCustomerType, " with ID ").concat(JSON.stringify(customerId), " is not a valid customer for the item with ID ").concat(JSON.stringify(itemId), ". ").concat(itemCustomerType ? "The item is configured to only be available for ".concat(itemCustomerType, " customers, but the customer is a ").concat(actualCustomerType, ".") : "The item is missing a customer type field. Please make sure it is set up correctly in your project configuration."),
        {
            item_id: itemId,
            customer_id: customerId,
            item_customer_type: itemCustomerType !== null && itemCustomerType !== void 0 ? itemCustomerType : null,
            actual_customer_type: actualCustomerType
        }
    ], (json)=>{
    var _json_item_customer_type;
    return [
        json.item_id,
        json.customer_id,
        (_json_item_customer_type = json.item_customer_type) !== null && _json_item_customer_type !== void 0 ? _json_item_customer_type : void 0,
        json.actual_customer_type
    ];
});
var CustomerDoesNotExist = createKnownErrorConstructor(KnownError, "CUSTOMER_DOES_NOT_EXIST", (customerId)=>[
        400,
        "Customer with ID ".concat(JSON.stringify(customerId), " does not exist."),
        {
            customer_id: customerId
        }
    ], (json)=>[
        json.customer_id
    ]);
var OfferDoesNotExist = createKnownErrorConstructor(KnownError, "OFFER_DOES_NOT_EXIST", (offerId, accessType)=>[
        400,
        "Offer with ID ".concat(JSON.stringify(offerId), " does not exist").concat(accessType === "client" ? " or you don't have permissions to access it." : "."),
        {
            offer_id: offerId,
            access_type: accessType
        }
    ], (json)=>[
        json.offer_id,
        json.access_type
    ]);
var OfferCustomerTypeDoesNotMatch = createKnownErrorConstructor(KnownError, "OFFER_CUSTOMER_TYPE_DOES_NOT_MATCH", (offerId, customerId, offerCustomerType, actualCustomerType)=>[
        400,
        "The ".concat(actualCustomerType, " with ID ").concat(JSON.stringify(customerId), " is not a valid customer for the inline offer that has been passed in. ").concat(offerCustomerType ? "The offer is configured to only be available for ".concat(offerCustomerType, " customers, but the customer is a ").concat(actualCustomerType, ".") : "The offer is missing a customer type field. Please make sure it is set up correctly in your project configuration."),
        {
            offer_id: offerId !== null && offerId !== void 0 ? offerId : null,
            customer_id: customerId,
            offer_customer_type: offerCustomerType !== null && offerCustomerType !== void 0 ? offerCustomerType : null,
            actual_customer_type: actualCustomerType
        }
    ], (json)=>{
    var _json_offer_id, _json_offer_customer_type;
    return [
        (_json_offer_id = json.offer_id) !== null && _json_offer_id !== void 0 ? _json_offer_id : void 0,
        json.customer_id,
        (_json_offer_customer_type = json.offer_customer_type) !== null && _json_offer_customer_type !== void 0 ? _json_offer_customer_type : void 0,
        json.actual_customer_type
    ];
});
var ItemQuantityInsufficientAmount = createKnownErrorConstructor(KnownError, "ITEM_QUANTITY_INSUFFICIENT_AMOUNT", (itemId, customerId, quantity)=>[
        400,
        "The item with ID ".concat(JSON.stringify(itemId), " has an insufficient quantity for the customer with ID ").concat(JSON.stringify(customerId), ". An attempt was made to charge ").concat(quantity, " credits."),
        {
            item_id: itemId,
            customer_id: customerId,
            quantity
        }
    ], (json)=>[
        json.item_id,
        json.customer_id,
        json.quantity
    ]);
var KnownErrors = {
    CannotDeleteCurrentSession,
    UnsupportedError,
    BodyParsingError,
    SchemaError,
    AllOverloadsFailed,
    ProjectAuthenticationError,
    PermissionIdAlreadyExists,
    CliAuthError,
    CliAuthExpiredError,
    CliAuthUsedError,
    InvalidProjectAuthentication,
    ProjectKeyWithoutAccessType,
    InvalidAccessType,
    AccessTypeWithoutProjectId,
    AccessTypeRequired,
    CannotGetOwnUserWithoutUser,
    InsufficientAccessType,
    InvalidPublishableClientKey,
    InvalidSecretServerKey,
    InvalidSuperSecretAdminKey,
    InvalidAdminAccessToken,
    UnparsableAdminAccessToken,
    AdminAccessTokenExpired,
    InvalidProjectForAdminAccessToken,
    AdminAccessTokenIsNotAdmin,
    ProjectAuthenticationRequired,
    ClientAuthenticationRequired,
    ServerAuthenticationRequired,
    ClientOrServerAuthenticationRequired,
    ClientOrAdminAuthenticationRequired,
    ClientOrServerOrAdminAuthenticationRequired,
    AdminAuthenticationRequired,
    ExpectedInternalProject,
    SessionAuthenticationError,
    InvalidSessionAuthentication,
    InvalidAccessToken,
    UnparsableAccessToken,
    AccessTokenExpired,
    InvalidProjectForAccessToken,
    RefreshTokenError,
    ProviderRejected,
    RefreshTokenNotFoundOrExpired,
    UserWithEmailAlreadyExists,
    EmailNotVerified,
    UserIdDoesNotExist,
    UserNotFound,
    ApiKeyNotFound,
    PublicApiKeyCannotBeRevoked,
    ProjectNotFound,
    CurrentProjectNotFound,
    BranchDoesNotExist,
    SignUpNotEnabled,
    PasswordAuthenticationNotEnabled,
    PasskeyAuthenticationNotEnabled,
    AnonymousAccountsNotEnabled,
    EmailPasswordMismatch,
    RedirectUrlNotWhitelisted,
    PasswordRequirementsNotMet,
    PasswordTooShort,
    PasswordTooLong,
    UserDoesNotHavePassword,
    VerificationCodeError,
    VerificationCodeNotFound,
    VerificationCodeExpired,
    VerificationCodeAlreadyUsed,
    VerificationCodeMaxAttemptsReached,
    PasswordConfirmationMismatch,
    EmailAlreadyVerified,
    EmailNotAssociatedWithUser,
    EmailIsNotPrimaryEmail,
    PasskeyRegistrationFailed,
    PasskeyWebAuthnError,
    PasskeyAuthenticationFailed,
    PermissionNotFound,
    PermissionScopeMismatch,
    ContainedPermissionNotFound,
    TeamNotFound,
    TeamMembershipNotFound,
    EmailTemplateAlreadyExists,
    OAuthConnectionNotConnectedToUser,
    OAuthConnectionAlreadyConnectedToAnotherUser,
    OAuthConnectionDoesNotHaveRequiredScope,
    OAuthExtraScopeNotAvailableWithSharedOAuthKeys,
    OAuthAccessTokenNotAvailableWithSharedOAuthKeys,
    InvalidOAuthClientIdOrSecret,
    InvalidScope,
    UserAlreadyConnectedToAnotherOAuthConnection,
    OuterOAuthTimeout,
    OAuthProviderNotFoundOrNotEnabled,
    OAuthProviderAccountIdAlreadyUsedForSignIn,
    MultiFactorAuthenticationRequired,
    InvalidTotpCode,
    UserAuthenticationRequired,
    TeamMembershipAlreadyExists,
    ProjectPermissionRequired,
    TeamPermissionRequired,
    InvalidSharedOAuthProviderId,
    InvalidStandardOAuthProviderId,
    InvalidAuthorizationCode,
    TeamPermissionNotFound,
    OAuthProviderAccessDenied,
    ContactChannelAlreadyUsedForAuthBySomeoneElse,
    InvalidPollingCodeError,
    ApiKeyNotValid,
    ApiKeyExpired,
    ApiKeyRevoked,
    WrongApiKeyType,
    EmailRenderingError,
    RequiresCustomEmailServer,
    ItemNotFound,
    ItemCustomerTypeDoesNotMatch,
    CustomerDoesNotExist,
    OfferDoesNotExist,
    OfferCustomerTypeDoesNotMatch,
    ItemQuantityInsufficientAmount
};
var knownErrorCodes = /* @__PURE__ */ new Set();
for (const [_, KnownError2] of Object.entries(KnownErrors)){
    if (knownErrorCodes.has(KnownError2.errorCode)) {
        throw new Error("Duplicate known error code: ".concat(KnownError2.errorCode));
    }
    knownErrorCodes.add(KnownError2.errorCode);
}
;
 //# sourceMappingURL=known-errors.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/maps.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/maps.tsx
__turbopack_context__.s({
    "DependenciesMap": ()=>DependenciesMap,
    "IterableWeakMap": ()=>IterableWeakMap,
    "MaybeWeakMap": ()=>MaybeWeakMap,
    "WeakRefIfAvailable": ()=>WeakRefIfAvailable
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/results.js [app-client] (ecmascript)");
;
var WeakRefIfAvailable = class {
    deref() {
        return this._ref.deref();
    }
    constructor(value){
        if (typeof WeakRef === "undefined") {
            this._ref = {
                deref: ()=>value
            };
        } else {
            this._ref = new WeakRef(value);
        }
    }
};
var _a, _b;
var IterableWeakMap = class {
    get(key) {
        var _this__weakMap_get;
        return (_this__weakMap_get = this._weakMap.get(key)) === null || _this__weakMap_get === void 0 ? void 0 : _this__weakMap_get.value;
    }
    set(key, value) {
        const existing = this._weakMap.get(key);
        var _existing_keyRef;
        const updated = {
            value,
            keyRef: (_existing_keyRef = existing === null || existing === void 0 ? void 0 : existing.keyRef) !== null && _existing_keyRef !== void 0 ? _existing_keyRef : new WeakRefIfAvailable(key)
        };
        this._weakMap.set(key, updated);
        this._keyRefs.add(updated.keyRef);
        return this;
    }
    delete(key) {
        const res = this._weakMap.get(key);
        if (res) {
            this._weakMap.delete(key);
            this._keyRefs.delete(res.keyRef);
            return true;
        }
        return false;
    }
    has(key) {
        return this._weakMap.has(key) && this._keyRefs.has(this._weakMap.get(key).keyRef);
    }
    *[(_b = Symbol.iterator, _a = Symbol.toStringTag, _b)]() {
        for (const keyRef of this._keyRefs){
            const key = keyRef.deref();
            const existing = key ? this._weakMap.get(key) : void 0;
            if (!key) {
                this._keyRefs.delete(keyRef);
            } else if (existing) {
                yield [
                    key,
                    existing.value
                ];
            }
        }
    }
    constructor(entries){
        this[_a] = "IterableWeakMap";
        const mappedEntries = entries === null || entries === void 0 ? void 0 : entries.map((e)=>[
                e[0],
                {
                    value: e[1],
                    keyRef: new WeakRefIfAvailable(e[0])
                }
            ]);
        this._weakMap = new WeakMap(mappedEntries !== null && mappedEntries !== void 0 ? mappedEntries : []);
        var _mappedEntries_map;
        this._keyRefs = new Set((_mappedEntries_map = mappedEntries === null || mappedEntries === void 0 ? void 0 : mappedEntries.map((e)=>e[1].keyRef)) !== null && _mappedEntries_map !== void 0 ? _mappedEntries_map : []);
    }
};
var _a2, _b2;
var MaybeWeakMap = class {
    _isAllowedInWeakMap(key) {
        return typeof key === "object" && key !== null || typeof key === "symbol" && Symbol.keyFor(key) === void 0;
    }
    get(key) {
        if (this._isAllowedInWeakMap(key)) {
            return this._weakMap.get(key);
        } else {
            return this._primitiveMap.get(key);
        }
    }
    set(key, value) {
        if (this._isAllowedInWeakMap(key)) {
            this._weakMap.set(key, value);
        } else {
            this._primitiveMap.set(key, value);
        }
        return this;
    }
    delete(key) {
        if (this._isAllowedInWeakMap(key)) {
            return this._weakMap.delete(key);
        } else {
            return this._primitiveMap.delete(key);
        }
    }
    has(key) {
        if (this._isAllowedInWeakMap(key)) {
            return this._weakMap.has(key);
        } else {
            return this._primitiveMap.has(key);
        }
    }
    *[(_b2 = Symbol.iterator, _a2 = Symbol.toStringTag, _b2)]() {
        yield* this._primitiveMap;
        yield* this._weakMap;
    }
    constructor(entries){
        this[_a2] = "MaybeWeakMap";
        const entriesArray = [
            ...entries !== null && entries !== void 0 ? entries : []
        ];
        this._primitiveMap = new Map(entriesArray.filter((e)=>!this._isAllowedInWeakMap(e[0])));
        this._weakMap = new IterableWeakMap(entriesArray.filter((e)=>this._isAllowedInWeakMap(e[0])));
    }
};
var _a3, _b3;
var DependenciesMap = class {
    _valueToResult(inner) {
        if (inner.hasValue) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(inner.value);
        } else {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(void 0);
        }
    }
    _unwrapFromInner(dependencies, inner) {
        if (dependencies.length === 0) {
            return this._valueToResult(inner);
        } else {
            const [key, ...rest] = dependencies;
            const newInner = inner.map.get(key);
            if (!newInner) {
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(void 0);
            }
            return this._unwrapFromInner(rest, newInner);
        }
    }
    _setInInner(dependencies, value, inner) {
        if (dependencies.length === 0) {
            const res = this._valueToResult(inner);
            if (value.status === "ok") {
                inner.hasValue = true;
                inner.value = value.data;
            } else {
                inner.hasValue = false;
                inner.value = void 0;
            }
            return res;
        } else {
            const [key, ...rest] = dependencies;
            let newInner = inner.map.get(key);
            if (!newInner) {
                inner.map.set(key, newInner = {
                    map: new MaybeWeakMap(),
                    hasValue: false,
                    value: void 0
                });
            }
            return this._setInInner(rest, value, newInner);
        }
    }
    *_iterateInner(dependencies, inner) {
        if (inner.hasValue) {
            yield [
                dependencies,
                inner.value
            ];
        }
        for (const [key, value] of inner.map){
            yield* this._iterateInner([
                ...dependencies,
                key
            ], value);
        }
    }
    get(dependencies) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].or(this._unwrapFromInner(dependencies, this._inner), void 0);
    }
    set(dependencies, value) {
        this._setInInner(dependencies, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(value), this._inner);
        return this;
    }
    delete(dependencies) {
        return this._setInInner(dependencies, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(void 0), this._inner).status === "ok";
    }
    has(dependencies) {
        return this._unwrapFromInner(dependencies, this._inner).status === "ok";
    }
    clear() {
        this._inner = {
            map: new MaybeWeakMap(),
            hasValue: false,
            value: void 0
        };
    }
    *[(_b3 = Symbol.iterator, _a3 = Symbol.toStringTag, _b3)]() {
        yield* this._iterateInner([], this._inner);
    }
    constructor(){
        this._inner = {
            map: new MaybeWeakMap(),
            hasValue: false,
            value: void 0
        };
        this[_a3] = "DependenciesMap";
    }
};
;
 //# sourceMappingURL=maps.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/bytes.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/bytes.tsx
__turbopack_context__.s({
    "decodeBase32": ()=>decodeBase32,
    "decodeBase64": ()=>decodeBase64,
    "decodeBase64OrBase64Url": ()=>decodeBase64OrBase64Url,
    "decodeBase64Url": ()=>decodeBase64Url,
    "encodeBase32": ()=>encodeBase32,
    "encodeBase64": ()=>encodeBase64,
    "encodeBase64Url": ()=>encodeBase64Url,
    "getBase32CharacterFromIndex": ()=>getBase32CharacterFromIndex,
    "getBase32IndexFromCharacter": ()=>getBase32IndexFromCharacter,
    "isBase32": ()=>isBase32,
    "isBase64": ()=>isBase64,
    "isBase64Url": ()=>isBase64Url,
    "toHexString": ()=>toHexString
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js [app-client] (ecmascript)");
;
var crockfordAlphabet = "0123456789ABCDEFGHJKMNPQRSTVWXYZ";
var crockfordReplacements = /* @__PURE__ */ new Map([
    [
        "o",
        "0"
    ],
    [
        "i",
        "1"
    ],
    [
        "l",
        "1"
    ]
]);
function toHexString(input) {
    return Array.from(input).map((b)=>b.toString(16).padStart(2, "0")).join("");
}
function getBase32CharacterFromIndex(index) {
    if (index < 0 || index >= crockfordAlphabet.length) {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Invalid base32 index: ".concat(index));
    }
    return crockfordAlphabet[index];
}
function getBase32IndexFromCharacter(character) {
    if (character.length !== 1) {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Invalid base32 character: ".concat(character));
    }
    const index = crockfordAlphabet.indexOf(character.toUpperCase());
    if (index === -1) {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Invalid base32 character: ".concat(character));
    }
    return index;
}
function encodeBase32(input) {
    let bits = 0;
    let value = 0;
    let output = "";
    for(let i = 0; i < input.length; i++){
        value = value << 8 | input[i];
        bits += 8;
        while(bits >= 5){
            output += getBase32CharacterFromIndex(value >>> bits - 5 & 31);
            bits -= 5;
        }
    }
    if (bits > 0) {
        output += getBase32CharacterFromIndex(value << 5 - bits & 31);
    }
    if (!isBase32(output)) {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Invalid base32 output; this should never happen");
    }
    return output;
}
function decodeBase32(input) {
    if (!isBase32(input)) {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Invalid base32 string");
    }
    const output = new Uint8Array(input.length * 5 / 8 | 0);
    let bits = 0;
    let value = 0;
    let outputIndex = 0;
    for(let i = 0; i < input.length; i++){
        let char = input[i].toLowerCase();
        if (char === " ") continue;
        if (crockfordReplacements.has(char)) {
            char = crockfordReplacements.get(char);
        }
        const index = getBase32IndexFromCharacter(char);
        value = value << 5 | index;
        bits += 5;
        if (bits >= 8) {
            output[outputIndex++] = value >>> bits - 8 & 255;
            bits -= 8;
        }
    }
    return output;
}
function encodeBase64(input) {
    const res = btoa(String.fromCharCode(...input));
    return res;
}
function decodeBase64(input) {
    return new Uint8Array(atob(input).split("").map((char)=>char.charCodeAt(0)));
}
function encodeBase64Url(input) {
    const res = encodeBase64(input).replace(/=+$/, "").replace(/\+/g, "-").replace(/\//g, "_");
    return res;
}
function decodeBase64Url(input) {
    if (!isBase64Url(input)) {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Invalid base64url string");
    }
    if (input === "") {
        return new Uint8Array(0);
    }
    return decodeBase64(input.replace(/-/g, "+").replace(/_/g, "/") + "====".slice((input.length - 1) % 4 + 1));
}
function decodeBase64OrBase64Url(input) {
    if (isBase64Url(input)) {
        return decodeBase64Url(input);
    } else if (isBase64(input)) {
        return decodeBase64(input);
    } else {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Invalid base64 or base64url string");
    }
}
function isBase32(input) {
    for (const char of input){
        if (char === " ") continue;
        const upperChar = char.toUpperCase();
        if (!crockfordAlphabet.includes(upperChar)) {
            return false;
        }
    }
    return true;
}
function isBase64(input) {
    const regex = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;
    return regex.test(input);
}
function isBase64Url(input) {
    if (input === "") {
        return true;
    }
    const regex = /^[0-9a-zA-Z_-]+$/;
    return regex.test(input);
}
;
 //# sourceMappingURL=bytes.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/crypto.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/crypto.tsx
__turbopack_context__.s({
    "generateRandomValues": ()=>generateRandomValues,
    "generateSecureRandomString": ()=>generateSecureRandomString
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$bytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/bytes.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$globals$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/globals.js [app-client] (ecmascript)");
;
;
;
function generateRandomValues(array) {
    if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$globals$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["globalVar"].crypto) {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Crypto API is not available in this environment. Are you using an old browser?");
    }
    if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$globals$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["globalVar"].crypto.getRandomValues) {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("crypto.getRandomValues is not available in this environment. Are you using an old browser?");
    }
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$globals$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["globalVar"].crypto.getRandomValues(array);
}
function generateSecureRandomString() {
    let minBitsOfEntropy = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 224;
    const base32CharactersCount = Math.ceil(minBitsOfEntropy / 5);
    const bytesCount = Math.ceil(base32CharactersCount * 5 / 8);
    const randomBytes = generateRandomValues(new Uint8Array(bytesCount));
    const str = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$bytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeBase32"])(randomBytes);
    return str.slice(str.length - base32CharactersCount).toLowerCase();
}
;
 //# sourceMappingURL=crypto.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/uuids.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/uuids.tsx
__turbopack_context__.s({
    "generateUuid": ()=>generateUuid,
    "isUuid": ()=>isUuid
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$crypto$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/crypto.js [app-client] (ecmascript)");
;
function generateUuid() {
    return "10000000-1000-4000-8000-100000000000".replace(/[018]/g, (c)=>(+c ^ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$crypto$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generateRandomValues"])(new Uint8Array(1))[0] & 15 >> +c / 4).toString(16));
}
function isUuid(str) {
    return /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/.test(str);
}
;
 //# sourceMappingURL=uuids.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/promises.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/promises.tsx
__turbopack_context__.s({
    "concatStacktracesIfRejected": ()=>concatStacktracesIfRejected,
    "createPromise": ()=>createPromise,
    "ignoreUnhandledRejection": ()=>ignoreUnhandledRejection,
    "neverResolve": ()=>neverResolve,
    "pending": ()=>pending,
    "rateLimited": ()=>rateLimited,
    "rejected": ()=>rejected,
    "resolved": ()=>resolved,
    "runAsynchronously": ()=>runAsynchronously,
    "runAsynchronouslyWithAlert": ()=>runAsynchronouslyWithAlert,
    "throttled": ()=>throttled,
    "timeout": ()=>timeout,
    "timeoutThrow": ()=>timeoutThrow,
    "wait": ()=>wait,
    "waitUntil": ()=>waitUntil
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/known-errors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$maps$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/maps.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/results.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$uuids$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/uuids.js [app-client] (ecmascript)");
;
;
;
;
;
function createPromise(callback) {
    let status = "pending";
    let valueOrReason = void 0;
    let resolve = null;
    let reject = null;
    const promise = new Promise((res, rej)=>{
        resolve = (value)=>{
            if (status !== "pending") return;
            status = "fulfilled";
            valueOrReason = value;
            res(value);
        };
        reject = (reason)=>{
            if (status !== "pending") return;
            status = "rejected";
            valueOrReason = reason;
            rej(reason);
        };
    });
    callback(resolve, reject);
    return Object.assign(promise, {
        status,
        ...status === "fulfilled" ? {
            value: valueOrReason
        } : {},
        ...status === "rejected" ? {
            reason: valueOrReason
        } : {}
    });
}
var resolvedCache = null;
function resolved(value) {
    resolvedCache !== null && resolvedCache !== void 0 ? resolvedCache : resolvedCache = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$maps$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DependenciesMap"]();
    if (resolvedCache.has([
        value
    ])) {
        return resolvedCache.get([
            value
        ]);
    }
    const res = Object.assign(Promise.resolve(value), {
        status: "fulfilled",
        value
    });
    resolvedCache.set([
        value
    ], res);
    return res;
}
var rejectedCache = null;
function rejected(reason) {
    rejectedCache !== null && rejectedCache !== void 0 ? rejectedCache : rejectedCache = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$maps$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DependenciesMap"]();
    if (rejectedCache.has([
        reason
    ])) {
        return rejectedCache.get([
            reason
        ]);
    }
    const promise = Promise.reject(reason);
    ignoreUnhandledRejection(promise);
    const res = Object.assign(promise, {
        status: "rejected",
        reason
    });
    rejectedCache.set([
        reason
    ], res);
    return res;
}
var neverResolvePromise = pending(new Promise(()=>{}));
function neverResolve() {
    return neverResolvePromise;
}
function pending(promise) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const res = promise.then((value)=>{
        res.status = "fulfilled";
        res.value = value;
        return value;
    }, (actualReason)=>{
        res.status = "rejected";
        res.reason = actualReason;
        throw actualReason;
    });
    res.status = "pending";
    return res;
}
function ignoreUnhandledRejection(promise) {
    promise.catch(()=>{});
}
function concatStacktracesIfRejected(promise) {
    const currentError = new Error();
    promise.catch((error)=>{
        if (error instanceof Error) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concatStacktraces"])(error, currentError);
        } else {}
    });
}
async function wait(ms) {
    if (!Number.isFinite(ms) || ms < 0) {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("wait() requires a non-negative integer number of milliseconds to wait. (found: ".concat(ms, "ms)"));
    }
    if (ms >= 2 ** 31) {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("The maximum timeout for wait() is 2147483647ms (2**31 - 1). (found: ${ms}ms)");
    }
    return await new Promise((resolve)=>setTimeout(resolve, ms));
}
async function waitUntil(date) {
    return await wait(date.getTime() - Date.now());
}
function runAsynchronouslyWithAlert() {
    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
        args[_key] = arguments[_key];
    }
    return runAsynchronously(args[0], {
        ...args[1],
        onError: (error)=>{
            var _process_env_NODE_ENV, _args__onError, _args_;
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownError"].isKnownError(error) && typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] !== "undefined" && ((_process_env_NODE_ENV = ("TURBOPACK compile-time value", "development")) === null || _process_env_NODE_ENV === void 0 ? void 0 : _process_env_NODE_ENV.includes("production"))) {
                alert(error.message);
            } else {
                alert("An unhandled error occurred. Please ".concat(("TURBOPACK compile-time truthy", 1) ? "check the browser console for the full error." : "TURBOPACK unreachable", "\n\n").concat(error));
            }
            (_args_ = args[1]) === null || _args_ === void 0 ? void 0 : (_args__onError = _args_.onError) === null || _args__onError === void 0 ? void 0 : _args__onError.call(_args_, error);
        }
    }, ...args.slice(2));
}
function runAsynchronously(promiseOrFunc) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (typeof promiseOrFunc === "function") {
        promiseOrFunc = promiseOrFunc();
    }
    if (promiseOrFunc) {
        concatStacktracesIfRejected(promiseOrFunc);
        promiseOrFunc.catch((error)=>{
            var _options_onError;
            (_options_onError = options.onError) === null || _options_onError === void 0 ? void 0 : _options_onError.call(options, error);
            const newError = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Uncaught error in asynchronous function: " + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorToNiceString"])(error), {
                cause: error
            });
            if (!options.noErrorLogging) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["captureError"])("runAsynchronously", newError);
            }
        });
    }
}
var TimeoutError = class extends Error {
    constructor(ms){
        super("Timeout after ".concat(ms, "ms"));
        this.ms = ms;
        this.name = "TimeoutError";
    }
};
async function timeout(promise, ms) {
    return await Promise.race([
        promise.then((value)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(value)),
        wait(ms).then(()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(new TimeoutError(ms)))
    ]);
}
async function timeoutThrow(promise, ms) {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].orThrow(await timeout(promise, ms));
}
function rateLimited(func, options) {
    let waitUntil2 = performance.now();
    let queue = [];
    let addedToQueueCallbacks = /* @__PURE__ */ new Map();
    const next = async ()=>{
        while(true){
            if (waitUntil2 > performance.now()) {
                await wait(Math.max(1, waitUntil2 - performance.now() + 1));
            } else if (queue.length === 0) {
                const uuid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$uuids$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generateUuid"])();
                await new Promise((resolve)=>{
                    addedToQueueCallbacks.set(uuid, resolve);
                });
                addedToQueueCallbacks.delete(uuid);
            } else {
                break;
            }
        }
        const nextFuncs = options.batchCalls ? queue.splice(0, queue.length) : [
            queue.shift()
        ];
        const start = performance.now();
        const value = await __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].fromPromise(func());
        const end = performance.now();
        var _options_throttleMs, _options_gapMs;
        waitUntil2 = Math.max(waitUntil2, start + ((_options_throttleMs = options.throttleMs) !== null && _options_throttleMs !== void 0 ? _options_throttleMs : 0), end + ((_options_gapMs = options.gapMs) !== null && _options_gapMs !== void 0 ? _options_gapMs : 0));
        for (const nextFunc of nextFuncs){
            if (value.status === "ok") {
                nextFunc[0](value.data);
            } else {
                nextFunc[1](value.error);
            }
        }
    };
    runAsynchronously(async ()=>{
        while(true){
            await next();
        }
    });
    return ()=>{
        return new Promise((resolve, reject)=>{
            var _options_debounceMs;
            waitUntil2 = Math.max(waitUntil2, performance.now() + ((_options_debounceMs = options.debounceMs) !== null && _options_debounceMs !== void 0 ? _options_debounceMs : 0));
            queue.push([
                resolve,
                reject
            ]);
            addedToQueueCallbacks.forEach((cb)=>cb());
        });
    };
}
function throttled(func, delayMs) {
    let timeout2 = null;
    let nextAvailable = null;
    return async function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
            args[_key] = arguments[_key];
        }
        while(nextAvailable !== null){
            await nextAvailable;
        }
        nextAvailable = new Promise((resolve)=>{
            timeout2 = setTimeout(()=>{
                nextAvailable = null;
                resolve(func(...args));
            }, delayMs);
        });
        return await nextAvailable;
    };
}
;
 //# sourceMappingURL=promises.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/results.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/results.tsx
__turbopack_context__.s({
    "AsyncResult": ()=>AsyncResult,
    "Result": ()=>Result
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_tagged_template_literal.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/promises.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js [app-client] (ecmascript)");
;
function _templateObject() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "\n        Attempts 1-",
        ":\n          ",
        "\n      "
    ]);
    _templateObject = function() {
        return data;
    };
    return data;
}
function _templateObject1() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "\n          Attempt ",
        ":\n            ",
        "\n        "
    ]);
    _templateObject1 = function() {
        return data;
    };
    return data;
}
function _templateObject2() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "\n      Error after ",
        " attempts.\n      \n      ",
        "\n      "
    ]);
    _templateObject2 = function() {
        return data;
    };
    return data;
}
;
;
var Result = {
    fromThrowing,
    fromThrowingAsync,
    fromPromise: promiseToResult,
    ok (data) {
        return {
            status: "ok",
            data
        };
    },
    error (error) {
        return {
            status: "error",
            error
        };
    },
    map: mapResult,
    or: (result, fallback)=>{
        return result.status === "ok" ? result.data : fallback;
    },
    orThrow: (result)=>{
        if (result.status === "error") {
            throw result.error;
        }
        return result.data;
    },
    orThrowAsync: async (result)=>{
        return Result.orThrow(await result);
    },
    retry
};
var AsyncResult = {
    fromThrowing,
    fromPromise: promiseToResult,
    ok: Result.ok,
    error: Result.error,
    pending,
    map: mapResult,
    or: (result, fallback)=>{
        if (result.status === "pending") {
            return fallback;
        }
        return Result.or(result, fallback);
    },
    orThrow: (result)=>{
        if (result.status === "pending") {
            throw new Error("Result still pending");
        }
        return Result.orThrow(result);
    },
    retry
};
function pending(progress) {
    return {
        status: "pending",
        progress
    };
}
async function promiseToResult(promise) {
    try {
        const value = await promise;
        return Result.ok(value);
    } catch (error) {
        return Result.error(error);
    }
}
function fromThrowing(fn) {
    try {
        return Result.ok(fn());
    } catch (error) {
        return Result.error(error);
    }
}
async function fromThrowingAsync(fn) {
    try {
        return Result.ok(await fn());
    } catch (error) {
        return Result.error(error);
    }
}
function mapResult(result, fn) {
    if (result.status === "error") return {
        status: "error",
        error: result.error
    };
    if (result.status === "pending") return {
        status: "pending",
        ..."progress" in result ? {
            progress: result.progress
        } : {}
    };
    return Result.ok(fn(result.data));
}
var RetryError = class extends AggregateError {
    get attempts() {
        return this.errors.length;
    }
    constructor(errors){
        const strings = errors.map((e)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nicify"])(e));
        const isAllSame = strings.length > 1 && strings.every((s)=>s === strings[0]);
        super(errors, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deindent"])(_templateObject2(), errors.length, isAllSame ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deindent"])(_templateObject(), errors.length, strings[0]) : strings.map((s, i)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deindent"])(_templateObject1(), i + 1, s)).join("\n\n")), {
            cause: errors[errors.length - 1]
        });
        this.errors = errors;
        this.name = "RetryError";
    }
};
RetryError.prototype.name = "RetryError";
async function retry(fn, totalAttempts) {
    let { exponentialDelayBase = 1e3 } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    const errors = [];
    for(let i = 0; i < totalAttempts; i++){
        const res = await fn(i);
        if (res.status === "ok") {
            return Object.assign(Result.ok(res.data), {
                attempts: i + 1
            });
        } else {
            errors.push(res.error);
            if (i < totalAttempts - 1) {
                await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["wait"])((Math.random() + 0.5) * exponentialDelayBase * 2 ** i);
            }
        }
    }
    return Object.assign(Result.error(new RetryError(errors)), {
        attempts: totalAttempts
    });
}
;
 //# sourceMappingURL=results.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/urls.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/urls.tsx
__turbopack_context__.s({
    "createUrlIfValid": ()=>createUrlIfValid,
    "getRelativePart": ()=>getRelativePart,
    "isLocalhost": ()=>isLocalhost,
    "isRelative": ()=>isRelative,
    "isValidHostname": ()=>isValidHostname,
    "isValidUrl": ()=>isValidUrl,
    "url": ()=>url,
    "urlString": ()=>urlString
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$crypto$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/crypto.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js [app-client] (ecmascript)");
;
;
function createUrlIfValid() {
    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
        args[_key] = arguments[_key];
    }
    try {
        return new URL(...args);
    } catch (e) {
        return null;
    }
}
function isValidUrl(url2) {
    return !!createUrlIfValid(url2);
}
function isValidHostname(hostname) {
    const url2 = createUrlIfValid("https://".concat(hostname));
    if (!url2) return false;
    return url2.hostname === hostname;
}
function isLocalhost(urlOrString) {
    const url2 = createUrlIfValid(urlOrString);
    if (!url2) return false;
    if (url2.hostname === "localhost" || url2.hostname.endsWith(".localhost")) return true;
    if (url2.hostname.match(/^127\.\d+\.\d+\.\d+$/)) return true;
    return false;
}
function isRelative(url2) {
    const randomDomain = "".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$crypto$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generateSecureRandomString"])(), ".stack-auth.example.com");
    const u = createUrlIfValid(url2, "https://".concat(randomDomain));
    if (!u) return false;
    if (u.host !== randomDomain) return false;
    if (u.protocol !== "https:") return false;
    return true;
}
function getRelativePart(url2) {
    return url2.pathname + url2.search + url2.hash;
}
function url(strings) {
    for(var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
        values[_key - 1] = arguments[_key];
    }
    return new URL(urlString(strings, ...values));
}
function urlString(strings) {
    for(var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
        values[_key - 1] = arguments[_key];
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["templateIdentity"])(strings, ...values.map(encodeURIComponent));
}
;
 //# sourceMappingURL=urls.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/locks.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/locks.tsx
__turbopack_context__.s({
    "ReadWriteLock": ()=>ReadWriteLock
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$async$2d$mutex$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/async-mutex/index.mjs [app-client] (ecmascript)");
;
var ReadWriteLock = class {
    async withReadLock(callback) {
        await this._acquireReadLock();
        try {
            return await callback();
        } finally{
            await this._releaseReadLock();
        }
    }
    async withWriteLock(callback) {
        await this._acquireWriteLock();
        try {
            return await callback();
        } finally{
            await this._releaseWriteLock();
        }
    }
    async _acquireReadLock() {
        await this.readersMutex.acquire();
        try {
            this.readers += 1;
            if (this.readers === 1) {
                await this.semaphore.acquire();
            }
        } finally{
            this.readersMutex.release();
        }
    }
    async _releaseReadLock() {
        await this.readersMutex.acquire();
        try {
            this.readers -= 1;
            if (this.readers === 0) {
                this.semaphore.release();
            }
        } finally{
            this.readersMutex.release();
        }
    }
    async _acquireWriteLock() {
        await this.semaphore.acquire();
    }
    async _releaseWriteLock() {
        this.semaphore.release();
    }
    constructor(){
        this.semaphore = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$async$2d$mutex$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Semaphore"](1);
        this.readers = 0;
        this.readersMutex = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$async$2d$mutex$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Semaphore"](1);
    }
};
;
 //# sourceMappingURL=locks.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/stores.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/stores.tsx
__turbopack_context__.s({
    "AsyncStore": ()=>AsyncStore,
    "Store": ()=>Store,
    "storeLock": ()=>storeLock
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$locks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/locks.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/promises.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/results.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$uuids$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/uuids.js [app-client] (ecmascript)");
;
;
;
;
var Store = class {
    get() {
        return this._value;
    }
    set(value) {
        const oldValue = this._value;
        this._value = value;
        this._callbacks.forEach((callback)=>callback(value, oldValue));
    }
    update(updater) {
        const value = updater(this._value);
        this.set(value);
        return value;
    }
    onChange(callback) {
        const uuid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$uuids$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generateUuid"])();
        this._callbacks.set(uuid, callback);
        return {
            unsubscribe: ()=>{
                this._callbacks.delete(uuid);
            }
        };
    }
    onceChange(callback) {
        const { unsubscribe } = this.onChange(function() {
            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
                args[_key] = arguments[_key];
            }
            unsubscribe();
            callback(...args);
        });
        return {
            unsubscribe
        };
    }
    constructor(_value){
        this._value = _value;
        this._callbacks = /* @__PURE__ */ new Map();
    }
};
var storeLock = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$locks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReadWriteLock"]();
var AsyncStore = class _AsyncStore {
    isAvailable() {
        return this._isAvailable;
    }
    isRejected() {
        return this._isRejected;
    }
    get() {
        if (this.isRejected()) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AsyncResult"].error(this._rejectionError);
        } else if (this.isAvailable()) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AsyncResult"].ok(this._mostRecentOkValue);
        } else {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AsyncResult"].pending();
        }
    }
    getOrWait() {
        const uuid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$uuids$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generateUuid"])();
        if (this.isRejected()) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rejected"])(this._rejectionError);
        } else if (this.isAvailable()) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolved"])(this._mostRecentOkValue);
        }
        const promise = new Promise((resolve, reject)=>{
            this.onceChange((value)=>{
                resolve(value);
            });
            this._waitingRejectFunctions.set(uuid, reject);
        });
        const withFinally = promise.finally(()=>{
            this._waitingRejectFunctions.delete(uuid);
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pending"])(withFinally);
    }
    _setIfLatest(result, curCounter) {
        const oldState = this.get();
        const oldValue = this._mostRecentOkValue;
        if (curCounter > this._lastSuccessfulUpdate) {
            switch(result.status){
                case "ok":
                    {
                        if (!this._isAvailable || this._isRejected || this._mostRecentOkValue !== result.data) {
                            this._lastSuccessfulUpdate = curCounter;
                            this._isAvailable = true;
                            this._isRejected = false;
                            this._mostRecentOkValue = result.data;
                            this._rejectionError = void 0;
                            this._callbacks.forEach((callback)=>callback({
                                    state: this.get(),
                                    oldState,
                                    lastOkValue: oldValue
                                }));
                            return true;
                        }
                        return false;
                    }
                case "error":
                    {
                        this._lastSuccessfulUpdate = curCounter;
                        this._isAvailable = false;
                        this._isRejected = true;
                        this._rejectionError = result.error;
                        this._waitingRejectFunctions.forEach((reject)=>reject(result.error));
                        this._callbacks.forEach((callback)=>callback({
                                state: this.get(),
                                oldState,
                                lastOkValue: oldValue
                            }));
                        return true;
                    }
            }
        }
        return false;
    }
    set(value) {
        this._setIfLatest(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(value), ++this._updateCounter);
    }
    update(updater) {
        const value = updater(this._mostRecentOkValue);
        this.set(value);
        return value;
    }
    async setAsync(promise) {
        return await storeLock.withReadLock(async ()=>{
            const curCounter = ++this._updateCounter;
            const result = await __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].fromPromise(promise);
            return this._setIfLatest(result, curCounter);
        });
    }
    setUnavailable() {
        this._lastSuccessfulUpdate = ++this._updateCounter;
        this._isAvailable = false;
        this._isRejected = false;
        this._rejectionError = void 0;
    }
    setRejected(error) {
        this._setIfLatest(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(error), ++this._updateCounter);
    }
    map(mapper) {
        const store = new _AsyncStore();
        this.onChange((value)=>{
            store.set(mapper(value));
        });
        return store;
    }
    onChange(callback) {
        return this.onStateChange((param)=>{
            let { state, lastOkValue } = param;
            if (state.status === "ok") {
                callback(state.data, lastOkValue);
            }
        });
    }
    onStateChange(callback) {
        const uuid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$uuids$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generateUuid"])();
        this._callbacks.set(uuid, callback);
        return {
            unsubscribe: ()=>{
                this._callbacks.delete(uuid);
            }
        };
    }
    onceChange(callback) {
        const { unsubscribe } = this.onChange(function() {
            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
                args[_key] = arguments[_key];
            }
            unsubscribe();
            callback(...args);
        });
        return {
            unsubscribe
        };
    }
    onceStateChange(callback) {
        const { unsubscribe } = this.onStateChange(function() {
            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
                args[_key] = arguments[_key];
            }
            unsubscribe();
            callback(...args);
        });
        return {
            unsubscribe
        };
    }
    constructor(...args){
        this._mostRecentOkValue = void 0;
        this._isRejected = false;
        this._waitingRejectFunctions = /* @__PURE__ */ new Map();
        this._callbacks = /* @__PURE__ */ new Map();
        this._updateCounter = 0;
        this._lastSuccessfulUpdate = -1;
        if (args.length === 0) {
            this._isAvailable = false;
        } else {
            this._isAvailable = true;
            this._mostRecentOkValue = args[0];
        }
    }
};
;
 //# sourceMappingURL=stores.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/sessions.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/sessions.ts
__turbopack_context__.s({
    "AccessToken": ()=>AccessToken,
    "InternalSession": ()=>InternalSession,
    "RefreshToken": ()=>RefreshToken
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$jose$2f$dist$2f$browser$2f$util$2f$decode_jwt$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/jose/dist/browser/util/decode_jwt.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$stores$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/stores.js [app-client] (ecmascript)");
;
;
;
var AccessToken = class {
    get decoded() {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$jose$2f$dist$2f$browser$2f$util$2f$decode_jwt$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeJwt"](this.token);
    }
    get expiresAt() {
        const { exp } = this.decoded;
        if (exp === void 0) return /* @__PURE__ */ new Date(864e13);
        return new Date(exp * 1e3);
    }
    /**
   * @returns The number of milliseconds until the access token expires, or 0 if it has already expired.
   */ get expiresInMillis() {
        return Math.max(0, this.expiresAt.getTime() - Date.now());
    }
    isExpired() {
        return this.expiresInMillis <= 0;
    }
    constructor(token){
        this.token = token;
        if (token === "undefined") {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Access token is the string 'undefined'; it's unlikely this is the correct value. They're supposed to be unguessable!");
        }
    }
};
var RefreshToken = class {
    constructor(token){
        this.token = token;
        if (token === "undefined") {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Refresh token is the string 'undefined'; it's unlikely this is the correct value. They're supposed to be unguessable!");
        }
    }
};
var InternalSession = class _InternalSession {
    static calculateSessionKey(ofTokens) {
        if (ofTokens.refreshToken) {
            return "refresh-".concat(ofTokens.refreshToken);
        } else if (ofTokens.accessToken) {
            return "access-".concat(ofTokens.accessToken);
        } else {
            return "not-logged-in";
        }
    }
    isKnownToBeInvalid() {
        return this._knownToBeInvalid.get();
    }
    /**
   * Marks the session object as invalid, meaning that the refresh and access tokens can no longer be used.
   */ markInvalid() {
        this._accessToken.set(null);
        this._knownToBeInvalid.set(true);
    }
    onInvalidate(callback) {
        return this._knownToBeInvalid.onChange(()=>callback());
    }
    /**
   * Returns the access token if it is found in the cache, fetching it otherwise.
   *
   * This is usually the function you want to call to get an access token. Either set `minMillisUntilExpiration` to a reasonable value, or catch errors that occur if it expires, and call `markAccessTokenExpired` to mark the token as expired if so (after which a call to this function will always refetch the token).
   *
   * @returns null if the session is known to be invalid, cached tokens if they exist in the cache (which may or may not be valid still), or new tokens otherwise.
   */ async getOrFetchLikelyValidTokens(minMillisUntilExpiration) {
        if (minMillisUntilExpiration >= 6e4) {
            throw new Error("Required access token expiry ".concat(minMillisUntilExpiration, "ms is too long; access tokens are too short to be used for more than 60s"));
        }
        const accessToken = this._getPotentiallyInvalidAccessTokenIfAvailable();
        if (!accessToken || accessToken.expiresInMillis < minMillisUntilExpiration) {
            const newTokens = await this.fetchNewTokens();
            const expiresInMillis = newTokens === null || newTokens === void 0 ? void 0 : newTokens.accessToken.expiresInMillis;
            if (expiresInMillis && expiresInMillis < minMillisUntilExpiration) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Required access token expiry ".concat(minMillisUntilExpiration, "ms is too long; access tokens are too short when they're generated (").concat(expiresInMillis, "ms)"));
            }
            return newTokens;
        }
        return {
            accessToken,
            refreshToken: this._refreshToken
        };
    }
    /**
   * Fetches new tokens that are, at the time of fetching, guaranteed to be valid.
   *
   * The newly generated tokens are short-lived, so it's good practice not to rely on their validity (if possible). However, this function is useful in some cases where you only want to pass access tokens to a service, and you want to make sure said access token has the longest possible lifetime.
   *
   * In most cases, you should prefer `getOrFetchLikelyValidTokens`.
   *
   * @returns null if the session is known to be invalid, or new tokens otherwise (which, at the time of fetching, are guaranteed to be valid).
   */ async fetchNewTokens() {
        const accessToken = await this._getNewlyFetchedAccessToken();
        return accessToken ? {
            accessToken,
            refreshToken: this._refreshToken
        } : null;
    }
    markAccessTokenExpired(accessToken) {
        if (this._accessToken.get() === accessToken) {
            this._accessToken.set(null);
        }
    }
    /**
   * Note that a callback invocation with `null` does not mean the session has been invalidated; the access token may just have expired. Use `onInvalidate` to detect invalidation.
   */ onAccessTokenChange(callback) {
        return this._accessToken.onChange(callback);
    }
    /**
   * @returns An access token, which may be expired or expire soon, or null if it is known to be invalid.
   */ _getPotentiallyInvalidAccessTokenIfAvailable() {
        if (!this._refreshToken) return null;
        if (this.isKnownToBeInvalid()) return null;
        const accessToken = this._accessToken.get();
        if (accessToken && !accessToken.isExpired()) return accessToken;
        return null;
    }
    /**
   * You should prefer `_getOrFetchPotentiallyInvalidAccessToken` in almost all cases.
   *
   * @returns A newly fetched access token (never read from cache), or null if the session either does not represent a user or the session is invalid.
   */ async _getNewlyFetchedAccessToken() {
        if (!this._refreshToken) return null;
        if (this._knownToBeInvalid.get()) return null;
        if (!this._refreshPromise) {
            this._refreshAndSetRefreshPromise(this._refreshToken);
        }
        return await this._refreshPromise;
    }
    _refreshAndSetRefreshPromise(refreshToken) {
        let refreshPromise = this._options.refreshAccessTokenCallback(refreshToken).then((accessToken)=>{
            if (refreshPromise === this._refreshPromise) {
                this._refreshPromise = null;
                this._accessToken.set(accessToken);
                if (!accessToken) {
                    this.markInvalid();
                }
            }
            return accessToken;
        });
        this._refreshPromise = refreshPromise;
    }
    constructor(_options){
        this._options = _options;
        /**
     * Whether the session as a whole is known to be invalid (ie. both access and refresh tokens are invalid). Used as a cache to avoid making multiple requests to the server (sessions never go back to being valid after being invalidated).
     *
     * It is possible for the access token to be invalid but the refresh token to be valid, in which case the session is
     * still valid (just needs a refresh). It is also possible for the access token to be valid but the refresh token to
     * be invalid, in which case the session is also valid (eg. if the refresh token is null because the user only passed
     * in an access token, eg. in a server-side request handler).
     */ this._knownToBeInvalid = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$stores$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Store"](false);
        this._refreshPromise = null;
        this._accessToken = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$stores$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Store"](_options.accessToken ? new AccessToken(_options.accessToken) : null);
        this._refreshToken = _options.refreshToken ? new RefreshToken(_options.refreshToken) : null;
        if (_options.accessToken === null && _options.refreshToken === null) {
            this._knownToBeInvalid.set(true);
        }
        var _options_accessToken;
        this.sessionKey = _InternalSession.calculateSessionKey({
            accessToken: (_options_accessToken = _options.accessToken) !== null && _options_accessToken !== void 0 ? _options_accessToken : null,
            refreshToken: _options.refreshToken
        });
    }
};
;
 //# sourceMappingURL=sessions.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/http.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/http.tsx
__turbopack_context__.s({
    "HTTP_METHODS": ()=>HTTP_METHODS,
    "decodeBasicAuthorizationHeader": ()=>decodeBasicAuthorizationHeader,
    "encodeBasicAuthorizationHeader": ()=>encodeBasicAuthorizationHeader
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$bytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/bytes.js [app-client] (ecmascript)");
;
var HTTP_METHODS = {
    "GET": {
        safe: true,
        idempotent: true
    },
    "POST": {
        safe: false,
        idempotent: false
    },
    "PUT": {
        safe: false,
        idempotent: true
    },
    "DELETE": {
        safe: false,
        idempotent: true
    },
    "PATCH": {
        safe: false,
        idempotent: false
    },
    "OPTIONS": {
        safe: true,
        idempotent: true
    },
    "HEAD": {
        safe: true,
        idempotent: true
    },
    "TRACE": {
        safe: true,
        idempotent: true
    },
    "CONNECT": {
        safe: false,
        idempotent: false
    }
};
function decodeBasicAuthorizationHeader(value) {
    const [type, encoded, ...rest] = value.split(" ");
    if (rest.length > 0) return null;
    if (!encoded) return null;
    if (type !== "Basic") return null;
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$bytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBase64"])(encoded)) return null;
    const decoded = new TextDecoder().decode((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$bytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeBase64"])(encoded));
    const split = decoded.split(":");
    return [
        split[0],
        split.slice(1).join(":")
    ];
}
function encodeBasicAuthorizationHeader(id, password) {
    if (id.includes(":")) throw new Error("Basic authorization header id cannot contain ':'");
    return "Basic ".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$bytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeBase64"])(new TextEncoder().encode("".concat(id, ":").concat(password))));
}
;
 //# sourceMappingURL=http.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/interface/client-interface.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/interface/client-interface.ts
__turbopack_context__.s({
    "StackClientInterface": ()=>StackClientInterface
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_tagged_template_literal.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$oauth4webapi$2f$build$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/oauth4webapi/build/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/known-errors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$sessions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/sessions.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$crypto$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/crypto.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$globals$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/globals.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$http$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/http.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$objects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/promises.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/results.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js [app-client] (ecmascript)");
;
function _templateObject() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "\n      Stack Auth is unable to connect to the server. Please check your internet connection and try again.\n\n      If the problem persists, please contact support and provide a screenshot of your entire browser console.\n\n      ",
        "\n\n      ",
        "\n    "
    ]);
    _templateObject = function() {
        return data;
    };
    return data;
}
;
;
;
;
;
;
;
;
;
;
;
var StackClientInterface = class {
    get projectId() {
        return this.options.projectId;
    }
    getApiUrl() {
        return this.options.getBaseUrl() + "/api/v1";
    }
    async runNetworkDiagnostics(session, requestType) {
        var _globalVar_navigator;
        const tryRequest = async (cb)=>{
            try {
                await cb();
                return "OK";
            } catch (e) {
                return "".concat(e);
            }
        };
        const cfTrace = await tryRequest(async ()=>{
            const res = await fetch("https://1.1.1.1/cdn-cgi/trace");
            if (!res.ok) {
                throw new Error("".concat(res.status, " ").concat(res.statusText, ": ").concat(await res.text()));
            }
        });
        const apiRoot = session !== void 0 && requestType !== void 0 ? await tryRequest(async ()=>{
            const res = await this.sendClientRequestInner("/", {}, session, requestType);
            if (res.status === "error") {
                throw res.error;
            }
        }) : "Not tested";
        const baseUrlBackend = await tryRequest(async ()=>{
            const res = await fetch(new URL("/health", this.getApiUrl()));
            if (!res.ok) {
                throw new Error("".concat(res.status, " ").concat(res.statusText, ": ").concat(await res.text()));
            }
        });
        const prodDashboard = await tryRequest(async ()=>{
            const res = await fetch("https://app.stack-auth.com/health");
            if (!res.ok) {
                throw new Error("".concat(res.status, " ").concat(res.statusText, ": ").concat(await res.text()));
            }
        });
        const prodBackend = await tryRequest(async ()=>{
            const res = await fetch("https://api.stack-auth.com/health");
            if (!res.ok) {
                throw new Error("".concat(res.status, " ").concat(res.statusText, ": ").concat(await res.text()));
            }
        });
        return {
            "navigator?.onLine": (_globalVar_navigator = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$globals$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["globalVar"].navigator) === null || _globalVar_navigator === void 0 ? void 0 : _globalVar_navigator.onLine,
            cfTrace,
            apiRoot,
            baseUrlBackend,
            prodDashboard,
            prodBackend
        };
    }
    async _createNetworkError(cause, session, requestType) {
        return new Error((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deindent"])(_templateObject(), cause, JSON.stringify(await this.runNetworkDiagnostics(session, requestType), null, 2)), {
            cause
        });
    }
    async _networkRetry(cb, session, requestType) {
        const retriedResult = await __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].retry(cb, 5, {
            exponentialDelayBase: 1e3
        });
        if (retriedResult.status === "error") {
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$globals$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["globalVar"].navigator && !__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$globals$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["globalVar"].navigator.onLine) {
                throw new Error("You are offline. Please check your internet connection and try again. (window.navigator.onLine is falsy)", {
                    cause: retriedResult.error
                });
            }
            throw await this._createNetworkError(retriedResult.error, session, requestType);
        }
        return retriedResult.data;
    }
    async _networkRetryException(cb, session, requestType) {
        return await this._networkRetry(async ()=>await __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].fromThrowingAsync(cb), session, requestType);
    }
    async fetchNewAccessToken(refreshToken) {
        if (!("publishableClientKey" in this.options)) {
            throw new Error("Admin session token is currently not supported for fetching new access token. Did you try to log in on a StackApp initiated with the admin session?");
        }
        const as = {
            issuer: this.options.getBaseUrl(),
            algorithm: "oauth2",
            token_endpoint: this.getApiUrl() + "/auth/oauth/token"
        };
        const client = {
            client_id: this.projectId,
            client_secret: this.options.publishableClientKey,
            token_endpoint_auth_method: "client_secret_post"
        };
        const rawResponse = await this._networkRetryException(async ()=>await __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$oauth4webapi$2f$build$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["refreshTokenGrantRequest"](as, client, refreshToken.token));
        const response = await this._processResponse(rawResponse);
        if (response.status === "error") {
            const error = response.error;
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].RefreshTokenError.isInstance(error)) {
                return null;
            }
            throw error;
        }
        if (!response.data.ok) {
            const body = await response.data.text();
            throw new Error("Failed to send refresh token request: ".concat(response.status, " ").concat(body));
        }
        const result = await __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$oauth4webapi$2f$build$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["processRefreshTokenResponse"](as, client, response.data);
        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$oauth4webapi$2f$build$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isOAuth2Error"](result)) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("OAuth error", {
                result
            });
        }
        if (!result.access_token) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Access token not found in token endpoint response, this is weird!");
        }
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$sessions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccessToken"](result.access_token);
    }
    async sendClientRequest(path, requestOptions, session) {
        let requestType = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "client";
        session !== null && session !== void 0 ? session : session = this.createSession({
            refreshToken: null
        });
        return await this._networkRetry(()=>this.sendClientRequestInner(path, requestOptions, session, requestType), session, requestType);
    }
    createSession(options) {
        const session = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$sessions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InternalSession"]({
            refreshAccessTokenCallback: async (refreshToken)=>await this.fetchNewAccessToken(refreshToken),
            ...options
        });
        return session;
    }
    async sendClientRequestAndCatchKnownError(path, requestOptions, tokenStoreOrNull, errorsToCatch) {
        try {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(await this.sendClientRequest(path, requestOptions, tokenStoreOrNull));
        } catch (e) {
            for (const errorType of errorsToCatch){
                if (errorType.isInstance(e)) {
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(e);
                }
            }
            throw e;
        }
    }
    async sendClientRequestInner(path, options, session, requestType) {
        var _this_options_prepareRequest, _this_options;
        let tokenObj = await session.getOrFetchLikelyValidTokens(2e4);
        let adminSession = "projectOwnerSession" in this.options ? this.options.projectOwnerSession : null;
        let adminTokenObj = adminSession ? await adminSession.getOrFetchLikelyValidTokens(2e4) : null;
        await ((_this_options_prepareRequest = (_this_options = this.options).prepareRequest) === null || _this_options_prepareRequest === void 0 ? void 0 : _this_options_prepareRequest.call(_this_options));
        let url = this.getApiUrl() + path;
        if (url.endsWith("/")) {
            url = url.slice(0, -1);
        }
        const params = {
            /**
       * This fetch may be cross-origin, in which case we don't want to send cookies of the
       * original origin (this is the default behavior of `credentials`).
       *
       * To help debugging, also omit cookies on same-origin, so we don't accidentally
       * implement reliance on cookies anywhere.
       *
       * However, Cloudflare Workers don't actually support `credentials`, so we only set it
       * if Cloudflare-exclusive globals are not detected. https://github.com/cloudflare/workers-sdk/issues/2514
       */ ..."WebSocketPair" in __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$globals$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["globalVar"] ? {} : {
                credentials: "omit"
            },
            ...options,
            headers: {
                "X-Stack-Override-Error-Status": "true",
                "X-Stack-Project-Id": this.projectId,
                "X-Stack-Access-Type": requestType,
                "X-Stack-Client-Version": this.options.clientVersion,
                ...tokenObj ? {
                    "X-Stack-Access-Token": tokenObj.accessToken.token
                } : {},
                ...(tokenObj === null || tokenObj === void 0 ? void 0 : tokenObj.refreshToken) ? {
                    "X-Stack-Refresh-Token": tokenObj.refreshToken.token
                } : {},
                ..."publishableClientKey" in this.options ? {
                    "X-Stack-Publishable-Client-Key": this.options.publishableClientKey
                } : {},
                ...adminTokenObj ? {
                    "X-Stack-Admin-Access-Token": adminTokenObj.accessToken.token
                } : {},
                /**
         * Next.js until v15 would cache fetch requests by default, and forcefully disabling it was nearly impossible.
         *
         * This header is used to change the cache key and hence always disable it, because we do our own caching.
         *
         * When we drop support for Next.js <15, we may be able to remove this header, but please make sure that this is
         * the case (I haven't actually tested.)
         */ "X-Stack-Random-Nonce": (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$crypto$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generateSecureRandomString"])(),
                // don't show a warning when proxying the API through ngrok (only relevant if the API url is an ngrok site)
                "ngrok-skip-browser-warning": "true",
                ...this.options.extraRequestHeaders,
                ...options.headers
            },
            /**
       * Cloudflare Workers does not support cache, so don't pass it there
       */ ..."WebSocketPair" in __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$globals$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["globalVar"] ? {} : {
                cache: "no-store"
            }
        };
        let rawRes;
        try {
            rawRes = await fetch(url, params);
        } catch (e) {
            if (e instanceof TypeError) {
                var _params_method;
                if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$http$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["HTTP_METHODS"][(_params_method = params.method) !== null && _params_method !== void 0 ? _params_method : "GET"].idempotent) {
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(e);
                } else {
                    throw await this._createNetworkError(e, session, requestType);
                }
            }
            throw e;
        }
        const processedRes = await this._processResponse(rawRes);
        if (processedRes.status === "error") {
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].InvalidAccessToken.isInstance(processedRes.error)) {
                if (!tokenObj) {
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Received invalid access token, but session is not logged in", {
                        tokenObj,
                        processedRes
                    });
                }
                session.markAccessTokenExpired(tokenObj.accessToken);
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(processedRes.error);
            }
            if (adminSession && (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].InvalidAdminAccessToken.isInstance(processedRes.error) || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].ApiKeyNotFound.isInstance(processedRes.error))) {
                if (!adminTokenObj) {
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Received invalid admin access token, but admin session is not logged in", {
                        adminTokenObj,
                        processedRes
                    });
                }
                adminSession.markAccessTokenExpired(adminTokenObj.accessToken);
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(processedRes.error);
            }
            throw processedRes.error;
        }
        const res = Object.assign(processedRes.data, {
            usedTokens: tokenObj
        });
        if (res.ok) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(res);
        } else if (res.status === 429) {
            const retryAfter = res.headers.get("Retry-After");
            if (retryAfter !== null) {
                console.log("Rate limited while sending request to ".concat(url, ". Will retry after ").concat(retryAfter, " seconds..."));
                await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["wait"])(Number(retryAfter) * 1e3);
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(new Error("Rate limited, retrying after ".concat(retryAfter, " seconds")));
            }
            console.log("Rate limited while sending request to ".concat(url, ", no retry-after header received. Retrying..."));
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(new Error("Rate limited, no retry-after header received"));
        } else {
            const error = await res.text();
            const errorObj = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Failed to send request to ".concat(url, ": ").concat(res.status, " ").concat(error), {
                request: params,
                res,
                path
            });
            if (res.status === 508 && error.includes("INFINITE_LOOP_DETECTED")) {
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(errorObj);
            }
            throw errorObj;
        }
    }
    async _processResponse(rawRes) {
        let res = rawRes;
        if (rawRes.headers.has("x-stack-actual-status")) {
            const actualStatus = Number(rawRes.headers.get("x-stack-actual-status"));
            res = new Response(rawRes.body, {
                status: actualStatus,
                statusText: rawRes.statusText,
                headers: rawRes.headers
            });
        }
        if (res.headers.has("x-stack-known-error")) {
            const errorJson = await res.json();
            if (res.headers.get("x-stack-known-error") !== errorJson.code) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Mismatch between x-stack-known-error header and error code in body; the server's response is invalid");
            }
            const error = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownError"].fromJson(errorJson);
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(error);
        }
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(res);
    }
    async checkFeatureSupport(options) {
        const res = await this.sendClientRequest("/check-feature-support", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(options)
        }, null);
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"](await res.text());
    }
    async sendForgotPasswordEmail(email, callbackUrl) {
        const res = await this.sendClientRequestAndCatchKnownError("/auth/password/send-reset-code", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                email,
                callback_url: callbackUrl
            })
        }, null, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].UserNotFound
        ]);
        if (res.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(res.error);
        } else {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(void 0);
        }
    }
    async sendVerificationEmail(email, callbackUrl, session) {
        const res = await this.sendClientRequestAndCatchKnownError("/contact-channels/send-verification-code", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                email,
                callback_url: callbackUrl
            })
        }, session, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].EmailAlreadyVerified
        ]);
        if (res.status === "error") {
            return res.error;
        }
    }
    async sendMagicLinkEmail(email, callbackUrl) {
        const res = await this.sendClientRequestAndCatchKnownError("/auth/otp/send-sign-in-code", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                email,
                callback_url: callbackUrl
            })
        }, null, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].RedirectUrlNotWhitelisted
        ]);
        if (res.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(res.error);
        } else {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(await res.data.json());
        }
    }
    async resetPassword(options) {
        const res = await this.sendClientRequestAndCatchKnownError("onlyVerifyCode" in options ? "/auth/password/reset/check-code" : "/auth/password/reset", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                code: options.code,
                ..."password" in options ? {
                    password: options.password
                } : {}
            })
        }, null, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].VerificationCodeError
        ]);
        if (res.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(res.error);
        } else {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(void 0);
        }
    }
    async updatePassword(options, session) {
        const res = await this.sendClientRequestAndCatchKnownError("/auth/password/update", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                old_password: options.oldPassword,
                new_password: options.newPassword
            })
        }, session, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].PasswordConfirmationMismatch,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].PasswordRequirementsNotMet
        ]);
        if (res.status === "error") {
            return res.error;
        }
    }
    async setPassword(options, session) {
        const res = await this.sendClientRequestAndCatchKnownError("/auth/password/set", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(options)
        }, session, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].PasswordRequirementsNotMet
        ]);
        if (res.status === "error") {
            return res.error;
        }
    }
    async verifyPasswordResetCode(code) {
        const res = await this.resetPassword({
            code,
            onlyVerifyCode: true
        });
        if (res.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(res.error);
        } else {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(void 0);
        }
    }
    async verifyEmail(code) {
        const res = await this.sendClientRequestAndCatchKnownError("/contact-channels/verify", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                code
            })
        }, null, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].VerificationCodeError
        ]);
        if (res.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(res.error);
        } else {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(void 0);
        }
    }
    async initiatePasskeyRegistration(options, session) {
        const res = await this.sendClientRequestAndCatchKnownError("/auth/passkey/initiate-passkey-registration", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(options)
        }, session, []);
        if (res.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(res.error);
        }
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(await res.data.json());
    }
    async registerPasskey(options, session) {
        const res = await this.sendClientRequestAndCatchKnownError("/auth/passkey/register", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(options)
        }, session, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].PasskeyRegistrationFailed
        ]);
        if (res.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(res.error);
        }
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(void 0);
    }
    async initiatePasskeyAuthentication(options, session) {
        const res = await this.sendClientRequestAndCatchKnownError("/auth/passkey/initiate-passkey-authentication", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(options)
        }, session, []);
        if (res.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(res.error);
        }
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(await res.data.json());
    }
    async sendTeamInvitation(options) {
        await this.sendClientRequest("/team-invitations/send-code", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                email: options.email,
                team_id: options.teamId,
                callback_url: options.callbackUrl
            })
        }, options.session);
    }
    async acceptTeamInvitation(options) {
        const res = await this.sendClientRequestAndCatchKnownError(options.type === "check" ? "/team-invitations/accept/check-code" : options.type === "details" ? "/team-invitations/accept/details" : "/team-invitations/accept", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                code: options.code
            })
        }, options.session, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].VerificationCodeError
        ]);
        if (res.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(res.error);
        } else {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(await res.data.json());
        }
    }
    async totpMfa(attemptCode, totp, session) {
        const res = await this.sendClientRequest("/auth/mfa/sign-in", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                code: attemptCode,
                type: "totp",
                totp
            })
        }, session);
        const result = await res.json();
        return {
            accessToken: result.access_token,
            refreshToken: result.refresh_token,
            newUser: result.is_new_user
        };
    }
    async signInWithCredential(email, password, session) {
        const res = await this.sendClientRequestAndCatchKnownError("/auth/password/sign-in", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                email,
                password
            })
        }, session, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].EmailPasswordMismatch
        ]);
        if (res.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(res.error);
        }
        const result = await res.data.json();
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok({
            accessToken: result.access_token,
            refreshToken: result.refresh_token
        });
    }
    async signUpWithCredential(email, password, emailVerificationRedirectUrl, session) {
        const res = await this.sendClientRequestAndCatchKnownError("/auth/password/sign-up", {
            headers: {
                "Content-Type": "application/json"
            },
            method: "POST",
            body: JSON.stringify({
                email,
                password,
                verification_callback_url: emailVerificationRedirectUrl
            })
        }, session, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].UserWithEmailAlreadyExists,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].PasswordRequirementsNotMet
        ]);
        if (res.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(res.error);
        }
        const result = await res.data.json();
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok({
            accessToken: result.access_token,
            refreshToken: result.refresh_token
        });
    }
    async signUpAnonymously(session) {
        const res = await this.sendClientRequestAndCatchKnownError("/auth/anonymous/sign-up", {
            method: "POST"
        }, session, []);
        if (res.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(res.error);
        }
        const result = await res.data.json();
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok({
            accessToken: result.access_token,
            refreshToken: result.refresh_token
        });
    }
    async signInWithMagicLink(code) {
        const res = await this.sendClientRequestAndCatchKnownError("/auth/otp/sign-in", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                code
            })
        }, null, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].VerificationCodeError
        ]);
        if (res.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(res.error);
        }
        const result = await res.data.json();
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok({
            accessToken: result.access_token,
            refreshToken: result.refresh_token,
            newUser: result.is_new_user
        });
    }
    async signInWithMfa(totp, code) {
        const res = await this.sendClientRequestAndCatchKnownError("/auth/mfa/sign-in", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                type: "totp",
                totp,
                code
            })
        }, null, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].VerificationCodeError
        ]);
        if (res.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(res.error);
        }
        const result = await res.data.json();
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok({
            accessToken: result.access_token,
            refreshToken: result.refresh_token,
            newUser: result.is_new_user
        });
    }
    async signInWithPasskey(body) {
        const res = await this.sendClientRequestAndCatchKnownError("/auth/passkey/sign-in", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(body)
        }, null, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].PasskeyAuthenticationFailed
        ]);
        if (res.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(res.error);
        }
        const result = await res.data.json();
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok({
            accessToken: result.access_token,
            refreshToken: result.refresh_token
        });
    }
    async getOAuthUrl(options) {
        const updatedRedirectUrl = new URL(options.redirectUrl);
        for (const key of [
            "code",
            "state"
        ]){
            if (updatedRedirectUrl.searchParams.has(key)) {
                console.warn("Redirect URL already contains " + key + " parameter, removing it as it will be overwritten by the OAuth callback");
            }
            updatedRedirectUrl.searchParams.delete(key);
        }
        if (!("publishableClientKey" in this.options)) {
            throw new Error("Admin session token is currently not supported for OAuth");
        }
        const url = new URL(this.getApiUrl() + "/auth/oauth/authorize/" + options.provider.toLowerCase());
        url.searchParams.set("client_id", this.projectId);
        url.searchParams.set("client_secret", this.options.publishableClientKey);
        url.searchParams.set("redirect_uri", updatedRedirectUrl.toString());
        url.searchParams.set("scope", "legacy");
        url.searchParams.set("state", options.state);
        url.searchParams.set("grant_type", "authorization_code");
        url.searchParams.set("code_challenge", options.codeChallenge);
        url.searchParams.set("code_challenge_method", "S256");
        url.searchParams.set("response_type", "code");
        url.searchParams.set("type", options.type);
        url.searchParams.set("error_redirect_url", options.errorRedirectUrl);
        if (options.afterCallbackRedirectUrl) {
            url.searchParams.set("after_callback_redirect_url", options.afterCallbackRedirectUrl);
        }
        if (options.type === "link") {
            const tokens = await options.session.getOrFetchLikelyValidTokens(2e4);
            url.searchParams.set("token", (tokens === null || tokens === void 0 ? void 0 : tokens.accessToken.token) || "");
            if (options.providerScope) {
                url.searchParams.set("provider_scope", options.providerScope);
            }
        }
        return url.toString();
    }
    async callOAuthCallback(options) {
        if (!("publishableClientKey" in this.options)) {
            throw new Error("Admin session token is currently not supported for OAuth");
        }
        const as = {
            issuer: this.options.getBaseUrl(),
            algorithm: "oauth2",
            token_endpoint: this.getApiUrl() + "/auth/oauth/token"
        };
        const client = {
            client_id: this.projectId,
            client_secret: this.options.publishableClientKey,
            token_endpoint_auth_method: "client_secret_post"
        };
        const params = await this._networkRetryException(async ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$oauth4webapi$2f$build$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateAuthResponse"](as, client, options.oauthParams, options.state));
        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$oauth4webapi$2f$build$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isOAuth2Error"](params)) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Error validating outer OAuth response", {
                params
            });
        }
        const response = await __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$oauth4webapi$2f$build$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["authorizationCodeGrantRequest"](as, client, params, options.redirectUri, options.codeVerifier);
        const result = await __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$oauth4webapi$2f$build$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["processAuthorizationCodeOAuth2Response"](as, client, response);
        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$oauth4webapi$2f$build$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isOAuth2Error"](result)) {
            if ("code" in result && result.code === "MULTI_FACTOR_AUTHENTICATION_REQUIRED") {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].MultiFactorAuthenticationRequired(result.details.attempt_code);
            }
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Outer OAuth error during authorization code response", {
                result
            });
        }
        var _result_refresh_token;
        return {
            newUser: result.is_new_user,
            afterCallbackRedirectUrl: result.after_callback_redirect_url,
            accessToken: result.access_token,
            refreshToken: (_result_refresh_token = result.refresh_token) !== null && _result_refresh_token !== void 0 ? _result_refresh_token : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["throwErr"])("Refresh token not found in outer OAuth response")
        };
    }
    async signOut(session) {
        const tokenObj = await session.getOrFetchLikelyValidTokens(2e4);
        if (tokenObj) {
            const resOrError = await this.sendClientRequestAndCatchKnownError("/auth/sessions/current", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({})
            }, session, [
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].RefreshTokenError
            ]);
            if (resOrError.status === "error") {
                if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].RefreshTokenError.isInstance(resOrError.error)) {} else {
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Unexpected error", {
                        error: resOrError.error
                    });
                }
            } else {}
        }
        session.markInvalid();
    }
    async getClientUserByToken(session) {
        const responseOrError = await this.sendClientRequestAndCatchKnownError("/users/me", {}, session, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].CannotGetOwnUserWithoutUser
        ]);
        if (responseOrError.status === "error") {
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].CannotGetOwnUserWithoutUser.isInstance(responseOrError.error)) {
                return null;
            } else {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Unexpected uncaught error", {
                    cause: responseOrError.error
                });
            }
        }
        const response = responseOrError.data;
        const user = await response.json();
        if (!user) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("User endpoint returned null; this should never happen");
        return user;
    }
    async listTeamInvitations(options, session) {
        const response = await this.sendClientRequest("/team-invitations?" + new URLSearchParams({
            team_id: options.teamId
        }), {}, session);
        const result = await response.json();
        return result.items;
    }
    async revokeTeamInvitation(invitationId, teamId, session) {
        await this.sendClientRequest("/team-invitations/".concat(invitationId, "?team_id=").concat(teamId), {
            method: "DELETE"
        }, session);
    }
    async listTeamMemberProfiles(options, session) {
        const response = await this.sendClientRequest("/team-member-profiles?" + new URLSearchParams((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$objects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["filterUndefined"])({
            team_id: options.teamId,
            user_id: options.userId
        })), {}, session);
        const result = await response.json();
        return result.items;
    }
    async getTeamMemberProfile(options, session) {
        const response = await this.sendClientRequest("/team-member-profiles/".concat(options.teamId, "/").concat(options.userId), {}, session);
        return await response.json();
    }
    async leaveTeam(teamId, session) {
        await this.sendClientRequest("/team-memberships/".concat(teamId, "/me"), {
            method: "DELETE",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({})
        }, session);
    }
    async updateTeamMemberProfile(options, session) {
        await this.sendClientRequest("/team-member-profiles/".concat(options.teamId, "/").concat(options.userId), {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(options.profile)
        }, session);
    }
    async updateTeam(options, session) {
        await this.sendClientRequest("/teams/".concat(options.teamId), {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(options.data)
        }, session);
    }
    async listCurrentUserTeamPermissions(options, session) {
        const response = await this.sendClientRequest("/team-permissions?team_id=".concat(options.teamId, "&user_id=me&recursive=").concat(options.recursive), {}, session);
        const result = await response.json();
        return result.items;
    }
    async listCurrentUserProjectPermissions(options, session) {
        const response = await this.sendClientRequest("/project-permissions?user_id=me&recursive=".concat(options.recursive), {}, session);
        const result = await response.json();
        return result.items;
    }
    async listCurrentUserTeams(session) {
        const response = await this.sendClientRequest("/teams?user_id=me", {}, session);
        const result = await response.json();
        return result.items;
    }
    async getClientProject() {
        const responseOrError = await this.sendClientRequestAndCatchKnownError("/projects/current", {}, null, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].ProjectNotFound
        ]);
        if (responseOrError.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(responseOrError.error);
        }
        const response = responseOrError.data;
        const project = await response.json();
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(project);
    }
    async updateClientUser(update, session) {
        await this.sendClientRequest("/users/me", {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(update)
        }, session);
    }
    async listProjects(session) {
        const response = await this.sendClientRequest("/internal/projects", {}, session);
        if (!response.ok) {
            throw new Error("Failed to list projects: " + response.status + " " + await response.text());
        }
        const json = await response.json();
        return json.items;
    }
    async createProject(project, session) {
        const fetchResponse = await this.sendClientRequest("/internal/projects", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(project)
        }, session);
        if (!fetchResponse.ok) {
            throw new Error("Failed to create project: " + fetchResponse.status + " " + await fetchResponse.text());
        }
        const json = await fetchResponse.json();
        return json;
    }
    async createProviderAccessToken(provider, scope, session) {
        const response = await this.sendClientRequest("/connected-accounts/me/".concat(provider, "/access-token"), {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                scope
            })
        }, session);
        return await response.json();
    }
    async createClientTeam(data, session) {
        const response = await this.sendClientRequest("/teams", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(data)
        }, session);
        return await response.json();
    }
    async deleteTeam(teamId, session) {
        await this.sendClientRequest("/teams/".concat(teamId), {
            method: "DELETE"
        }, session);
    }
    async deleteCurrentUser(session) {
        await this.sendClientRequest("/users/me", {
            method: "DELETE"
        }, session);
    }
    async createClientContactChannel(data, session) {
        const response = await this.sendClientRequest("/contact-channels", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(data)
        }, session);
        return await response.json();
    }
    async updateClientContactChannel(id, data, session) {
        const response = await this.sendClientRequest("/contact-channels/me/".concat(id), {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(data)
        }, session);
        return await response.json();
    }
    async deleteClientContactChannel(id, session) {
        await this.sendClientRequest("/contact-channels/me/".concat(id), {
            method: "DELETE"
        }, session);
    }
    async deleteSession(sessionId, session) {
        await this.sendClientRequest("/auth/sessions/".concat(sessionId, "?user_id=me"), {
            method: "DELETE"
        }, session);
    }
    async listSessions(session) {
        const response = await this.sendClientRequest("/auth/sessions?user_id=me", {
            method: "GET"
        }, session);
        return await response.json();
    }
    async listClientContactChannels(session) {
        const response = await this.sendClientRequest("/contact-channels?user_id=me", {
            method: "GET"
        }, session);
        const json = await response.json();
        return json.items;
    }
    async sendCurrentUserContactChannelVerificationEmail(contactChannelId, callbackUrl, session) {
        const responseOrError = await this.sendClientRequestAndCatchKnownError("/contact-channels/me/".concat(contactChannelId, "/send-verification-code"), {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                callback_url: callbackUrl
            })
        }, session, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].EmailAlreadyVerified
        ]);
        if (responseOrError.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(responseOrError.error);
        }
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(void 0);
    }
    async cliLogin(loginCode, refreshToken, session) {
        const responseOrError = await this.sendClientRequestAndCatchKnownError("/auth/cli/complete", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                login_code: loginCode,
                refresh_token: refreshToken
            })
        }, session, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].SchemaError
        ]);
        if (responseOrError.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(responseOrError.error);
        }
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(void 0);
    }
    async _getApiKeyRequestInfo(options) {
        if ("user_id" in options && "team_id" in options) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Cannot specify both user_id and team_id in _getApiKeyRequestInfo");
        }
        return {
            endpoint: "team_id" in options ? "/team-api-keys" : "/user-api-keys",
            queryParams: new URLSearchParams((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$objects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["filterUndefinedOrNull"])(options))
        };
    }
    async listProjectApiKeys(options, session, requestType) {
        const sendRequest = (requestType === "client" ? this.sendClientRequest : this.sendServerRequest).bind(this);
        const { endpoint, queryParams } = await this._getApiKeyRequestInfo(options);
        const response = await sendRequest("".concat(endpoint, "?").concat(queryParams.toString()), {
            method: "GET"
        }, session, requestType);
        const json = await response.json();
        return json.items;
    }
    async createProjectApiKey(data, session, requestType) {
        const sendRequest = (requestType === "client" ? this.sendClientRequest : this.sendServerRequest).bind(this);
        const { endpoint } = await this._getApiKeyRequestInfo(data);
        const response = await sendRequest("".concat(endpoint), {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(data)
        }, session, requestType);
        return await response.json();
    }
    async getProjectApiKey(options, keyId, session, requestType) {
        const sendRequest = (requestType === "client" ? this.sendClientRequest : this.sendServerRequest).bind(this);
        const { endpoint, queryParams } = await this._getApiKeyRequestInfo(options);
        const response = await sendRequest("".concat(endpoint, "/").concat(keyId, "?").concat(queryParams.toString()), {
            method: "GET"
        }, session, requestType);
        return await response.json();
    }
    async updateProjectApiKey(options, keyId, data, session, requestType) {
        const sendRequest = (requestType === "client" ? this.sendClientRequest : this.sendServerRequest).bind(this);
        const { endpoint, queryParams } = await this._getApiKeyRequestInfo(options);
        const response = await sendRequest("".concat(endpoint, "/").concat(keyId, "?").concat(queryParams.toString()), {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(data)
        }, session, requestType);
        return await response.json();
    }
    async checkProjectApiKey(type, apiKey, session, requestType) {
        const sendRequest = (requestType === "client" ? this.sendClientRequestAndCatchKnownError : this.sendServerRequestAndCatchKnownError).bind(this);
        const result = await sendRequest("/".concat(type, "-api-keys/check"), {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                api_key: apiKey
            })
        }, session, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].ApiKeyNotValid
        ]);
        if (result.status === "error") {
            return null;
        }
        return await result.data.json();
    }
    async listNotificationCategories(session) {
        const response = await this.sendClientRequest("/emails/notification-preference/me", {}, session);
        const result = await response.json();
        return result.items;
    }
    async setNotificationsEnabled(notificationCategoryId, enabled, session) {
        await this.sendClientRequest("/emails/notification-preference/me/".concat(notificationCategoryId), {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                enabled
            })
        }, session);
    }
    async getOAuthProvider(userId, providerId, session) {
        let requestType = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "client";
        const sendRequest = requestType === "client" ? this.sendClientRequest : this.sendServerRequest;
        const response = await sendRequest.call(this, "/oauth-providers/".concat(userId, "/").concat(providerId), {
            method: "GET"
        }, session, requestType);
        return response.json();
    }
    async listOAuthProviders() {
        let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, session = arguments.length > 1 ? arguments[1] : void 0, requestType = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "client";
        const sendRequest = requestType === "client" ? this.sendClientRequest : this.sendServerRequest;
        const queryParams = new URLSearchParams((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$objects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["filterUndefined"])(options));
        const response = await sendRequest.call(this, "/oauth-providers".concat(queryParams.toString() ? "?".concat(queryParams.toString()) : ""), {
            method: "GET"
        }, session, requestType);
        const result = await response.json();
        return result.items;
    }
    async deleteOAuthProvider(userId, providerId, session) {
        let requestType = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "client";
        const sendRequest = requestType === "client" ? this.sendClientRequest : this.sendServerRequest;
        const response = await sendRequest.call(this, "/oauth-providers/".concat(userId, "/").concat(providerId), {
            method: "DELETE"
        }, session, requestType);
        return response.json();
    }
    async getItem(options, session) {
        var _options_teamId;
        const customerId = (_options_teamId = options.teamId) !== null && _options_teamId !== void 0 ? _options_teamId : options.userId;
        const response = await this.sendClientRequest("/payments/items/".concat(customerId, "/").concat(options.itemId), {}, session);
        return await response.json();
    }
    async createCheckoutUrl(customer_id, offerIdOrInline, session) {
        const offerBody = typeof offerIdOrInline === "string" ? {
            offer_id: offerIdOrInline
        } : {
            inline_offer: offerIdOrInline
        };
        const response = await this.sendClientRequest("/payments/purchases/create-purchase-url", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                customer_id,
                ...offerBody
            })
        }, session);
        const { url } = await response.json();
        return url;
    }
    constructor(options){
        this.options = options;
    }
};
;
 //# sourceMappingURL=client-interface.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/interface/server-interface.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/interface/server-interface.ts
__turbopack_context__.s({
    "StackServerInterface": ()=>StackServerInterface
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_tagged_template_literal.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/known-errors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$objects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/results.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/urls.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$interface$2f$client$2d$interface$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/interface/client-interface.js [app-client] (ecmascript)");
;
function _templateObject() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/users/",
        ""
    ]);
    _templateObject = function() {
        return data;
    };
    return data;
}
function _templateObject1() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/team-invitations?team_id=",
        ""
    ]);
    _templateObject1 = function() {
        return data;
    };
    return data;
}
function _templateObject2() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/team-invitations/",
        "?team_id=",
        ""
    ]);
    _templateObject2 = function() {
        return data;
    };
    return data;
}
function _templateObject3() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/team-member-profiles?team_id=",
        ""
    ]);
    _templateObject3 = function() {
        return data;
    };
    return data;
}
function _templateObject4() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/team-member-profiles/",
        "/",
        ""
    ]);
    _templateObject4 = function() {
        return data;
    };
    return data;
}
function _templateObject5() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/teams/",
        ""
    ]);
    _templateObject5 = function() {
        return data;
    };
    return data;
}
function _templateObject6() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/teams/",
        ""
    ]);
    _templateObject6 = function() {
        return data;
    };
    return data;
}
function _templateObject7() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/team-memberships/",
        "/",
        ""
    ]);
    _templateObject7 = function() {
        return data;
    };
    return data;
}
function _templateObject8() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/team-memberships/",
        "/",
        ""
    ]);
    _templateObject8 = function() {
        return data;
    };
    return data;
}
function _templateObject9() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/users/",
        ""
    ]);
    _templateObject9 = function() {
        return data;
    };
    return data;
}
function _templateObject10() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/connected-accounts/",
        "/",
        "/access-token"
    ]);
    _templateObject10 = function() {
        return data;
    };
    return data;
}
function _templateObject11() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/team-memberships/",
        "/",
        ""
    ]);
    _templateObject11 = function() {
        return data;
    };
    return data;
}
function _templateObject12() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/team-member-profiles/",
        "/",
        ""
    ]);
    _templateObject12 = function() {
        return data;
    };
    return data;
}
function _templateObject13() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/team-permissions/",
        "/",
        "/",
        ""
    ]);
    _templateObject13 = function() {
        return data;
    };
    return data;
}
function _templateObject14() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/project-permissions/",
        "/",
        ""
    ]);
    _templateObject14 = function() {
        return data;
    };
    return data;
}
function _templateObject15() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/team-permissions/",
        "/",
        "/",
        ""
    ]);
    _templateObject15 = function() {
        return data;
    };
    return data;
}
function _templateObject16() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/project-permissions/",
        "/",
        ""
    ]);
    _templateObject16 = function() {
        return data;
    };
    return data;
}
function _templateObject17() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/users/",
        ""
    ]);
    _templateObject17 = function() {
        return data;
    };
    return data;
}
function _templateObject18() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/contact-channels/",
        "/",
        ""
    ]);
    _templateObject18 = function() {
        return data;
    };
    return data;
}
function _templateObject19() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/contact-channels/",
        "/",
        ""
    ]);
    _templateObject19 = function() {
        return data;
    };
    return data;
}
function _templateObject20() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/contact-channels?user_id=",
        ""
    ]);
    _templateObject20 = function() {
        return data;
    };
    return data;
}
function _templateObject21() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/emails/notification-preference/",
        ""
    ]);
    _templateObject21 = function() {
        return data;
    };
    return data;
}
function _templateObject22() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/emails/notification-preference/",
        "/",
        ""
    ]);
    _templateObject22 = function() {
        return data;
    };
    return data;
}
function _templateObject23() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/contact-channels/",
        "/",
        "/send-verification-code"
    ]);
    _templateObject23 = function() {
        return data;
    };
    return data;
}
function _templateObject24() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/auth/sessions?user_id=",
        ""
    ]);
    _templateObject24 = function() {
        return data;
    };
    return data;
}
function _templateObject25() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/auth/sessions/",
        ""
    ]);
    _templateObject25 = function() {
        return data;
    };
    return data;
}
function _templateObject26() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/oauth-providers/",
        "/",
        ""
    ]);
    _templateObject26 = function() {
        return data;
    };
    return data;
}
function _templateObject27() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "/oauth-providers/",
        "/",
        ""
    ]);
    _templateObject27 = function() {
        return data;
    };
    return data;
}
;
;
;
;
;
;
var StackServerInterface = class extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$interface$2f$client$2d$interface$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackClientInterface"] {
    async sendServerRequest(path, options, session) {
        let requestType = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "server";
        return await this.sendClientRequest(path, {
            ...options,
            headers: {
                "x-stack-secret-server-key": "secretServerKey" in this.options ? this.options.secretServerKey : "",
                ...options.headers
            }
        }, session, requestType);
    }
    async sendServerRequestAndCatchKnownError(path, requestOptions, tokenStoreOrNull, errorsToCatch) {
        try {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(await this.sendServerRequest(path, requestOptions, tokenStoreOrNull));
        } catch (e) {
            for (const errorType of errorsToCatch){
                if (errorType.isInstance(e)) {
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(e);
                }
            }
            throw e;
        }
    }
    async createServerUser(data) {
        const response = await this.sendServerRequest("/users", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(data)
        }, null);
        return await response.json();
    }
    async getServerUserByToken(session) {
        const responseOrError = await this.sendServerRequestAndCatchKnownError("/users/me", {}, session, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].CannotGetOwnUserWithoutUser
        ]);
        if (responseOrError.status === "error") {
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].CannotGetOwnUserWithoutUser.isInstance(responseOrError.error)) {
                return null;
            } else {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Unexpected uncaught error", {
                    cause: responseOrError.error
                });
            }
        }
        const response = responseOrError.data;
        const user = await response.json();
        if (!user) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("User endpoint returned null; this should never happen");
        return user;
    }
    async getServerUserById(userId) {
        const responseOrError = await this.sendServerRequestAndCatchKnownError((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject(), userId), {}, null, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].UserNotFound
        ]);
        if (responseOrError.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(responseOrError.error);
        }
        const user = await responseOrError.data.json();
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(user);
    }
    async listServerTeamInvitations(options) {
        const response = await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject1(), options.teamId), {}, null);
        const result = await response.json();
        return result.items;
    }
    async revokeServerTeamInvitation(invitationId, teamId) {
        await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject2(), invitationId, teamId), {
            method: "DELETE"
        }, null);
    }
    async listServerTeamMemberProfiles(options) {
        const response = await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject3(), options.teamId), {}, null);
        const result = await response.json();
        return result.items;
    }
    async getServerTeamMemberProfile(options) {
        const response = await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject4(), options.teamId, options.userId), {}, null);
        return await response.json();
    }
    async listServerTeamPermissions(options, session) {
        const response = await this.sendServerRequest("/team-permissions?".concat(new URLSearchParams((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$objects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["filterUndefined"])({
            user_id: options.userId,
            team_id: options.teamId,
            recursive: options.recursive.toString()
        }))), {}, session);
        const result = await response.json();
        return result.items;
    }
    async listServerProjectPermissions(options, session) {
        const response = await this.sendServerRequest("/project-permissions?".concat(new URLSearchParams((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$objects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["filterUndefined"])({
            user_id: options.userId,
            recursive: options.recursive.toString()
        }))), {}, session);
        const result = await response.json();
        return result.items;
    }
    async listServerUsers(options) {
        var _options_limit, _options_desc;
        const searchParams = new URLSearchParams((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$objects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["filterUndefined"])({
            cursor: options.cursor,
            limit: (_options_limit = options.limit) === null || _options_limit === void 0 ? void 0 : _options_limit.toString(),
            desc: (_options_desc = options.desc) === null || _options_desc === void 0 ? void 0 : _options_desc.toString(),
            ...options.orderBy ? {
                order_by: ({
                    signedUpAt: "signed_up_at"
                })[options.orderBy]
            } : {},
            ...options.query ? {
                query: options.query
            } : {}
        }));
        const response = await this.sendServerRequest("/users?" + searchParams.toString(), {}, null);
        return await response.json();
    }
    async listServerTeams(options) {
        const response = await this.sendServerRequest("/teams?".concat(new URLSearchParams((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$objects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["filterUndefined"])({
            user_id: options === null || options === void 0 ? void 0 : options.userId
        }))), {}, null);
        const result = await response.json();
        return result.items;
    }
    async getServerTeam(teamId) {
        const response = await this.sendServerRequest("/teams/".concat(teamId), {}, null);
        return await response.json();
    }
    async listServerTeamUsers(teamId) {
        const response = await this.sendServerRequest("/users?team_id=".concat(teamId), {}, null);
        const result = await response.json();
        return result.items;
    }
    /* when passing a session, the user will be added to the team */ async createServerTeam(data) {
        const response = await this.sendServerRequest("/teams", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(data)
        }, null);
        return await response.json();
    }
    async updateServerTeam(teamId, data) {
        const response = await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject5(), teamId), {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(data)
        }, null);
        return await response.json();
    }
    async deleteServerTeam(teamId) {
        await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject6(), teamId), {
            method: "DELETE"
        }, null);
    }
    async addServerUserToTeam(options) {
        const response = await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject7(), options.teamId, options.userId), {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({})
        }, null);
        return await response.json();
    }
    async removeServerUserFromTeam(options) {
        await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject8(), options.teamId, options.userId), {
            method: "DELETE",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({})
        }, null);
    }
    async updateServerUser(userId, update) {
        const response = await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject9(), userId), {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(update)
        }, null);
        return await response.json();
    }
    async createServerProviderAccessToken(userId, provider, scope) {
        const response = await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject10(), userId, provider), {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                scope
            })
        }, null);
        return await response.json();
    }
    async createServerUserSession(userId, expiresInMillis, isImpersonation) {
        const response = await this.sendServerRequest("/auth/sessions", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                user_id: userId,
                expires_in_millis: expiresInMillis,
                is_impersonation: isImpersonation
            })
        }, null);
        const result = await response.json();
        return {
            accessToken: result.access_token,
            refreshToken: result.refresh_token
        };
    }
    async leaveServerTeam(options) {
        await this.sendClientRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject11(), options.teamId, options.userId), {
            method: "DELETE",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({})
        }, null);
    }
    async updateServerTeamMemberProfile(options) {
        await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject12(), options.teamId, options.userId), {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(options.profile)
        }, null);
    }
    async grantServerTeamUserPermission(teamId, userId, permissionId) {
        await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject13(), teamId, userId, permissionId), {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({})
        }, null);
    }
    async grantServerProjectPermission(userId, permissionId) {
        await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject14(), userId, permissionId), {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({})
        }, null);
    }
    async revokeServerTeamUserPermission(teamId, userId, permissionId) {
        await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject15(), teamId, userId, permissionId), {
            method: "DELETE",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({})
        }, null);
    }
    async revokeServerProjectPermission(userId, permissionId) {
        await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject16(), userId, permissionId), {
            method: "DELETE",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({})
        }, null);
    }
    async deleteServerUser(userId) {
        await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject17(), userId), {
            method: "DELETE",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({})
        }, null);
    }
    async createServerContactChannel(data) {
        const response = await this.sendServerRequest("/contact-channels", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(data)
        }, null);
        return await response.json();
    }
    async updateServerContactChannel(userId, contactChannelId, data) {
        const response = await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject18(), userId, contactChannelId), {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(data)
        }, null);
        return await response.json();
    }
    async deleteServerContactChannel(userId, contactChannelId) {
        await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject19(), userId, contactChannelId), {
            method: "DELETE"
        }, null);
    }
    async listServerContactChannels(userId) {
        const response = await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject20(), userId), {
            method: "GET"
        }, null);
        const json = await response.json();
        return json.items;
    }
    async listServerNotificationCategories(userId) {
        const response = await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject21(), userId), {
            method: "GET"
        }, null);
        const json = await response.json();
        return json.items;
    }
    async setServerNotificationsEnabled(userId, notificationCategoryId, enabled) {
        await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject22(), userId, notificationCategoryId), {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                enabled
            })
        }, null);
    }
    async sendServerContactChannelVerificationEmail(userId, contactChannelId, callbackUrl) {
        await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject23(), userId, contactChannelId), {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                callback_url: callbackUrl
            })
        }, null);
    }
    async listServerSessions(userId) {
        const response = await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject24(), userId), {
            method: "GET"
        }, null);
        return await response.json();
    }
    async deleteServerSession(sessionId) {
        await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject25(), sessionId), {
            method: "DELETE"
        }, null);
    }
    async sendServerTeamInvitation(options) {
        await this.sendServerRequest("/team-invitations/send-code", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                email: options.email,
                team_id: options.teamId,
                callback_url: options.callbackUrl
            })
        }, null);
    }
    async updatePassword(options) {
        const res = await this.sendServerRequestAndCatchKnownError("/auth/password/update", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                old_password: options.oldPassword,
                new_password: options.newPassword
            })
        }, null, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].PasswordConfirmationMismatch,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].PasswordRequirementsNotMet
        ]);
        if (res.status === "error") {
            return res.error;
        }
    }
    // OAuth Providers CRUD operations
    async createServerOAuthProvider(data) {
        const response = await this.sendServerRequest("/oauth-providers", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(data)
        }, null);
        return await response.json();
    }
    async listServerOAuthProviders() {
        let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        const queryParams = new URLSearchParams((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$objects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["filterUndefined"])(options));
        const response = await this.sendServerRequest("/oauth-providers".concat(queryParams.toString() ? "?".concat(queryParams.toString()) : ""), {
            method: "GET"
        }, null);
        const result = await response.json();
        return result.items;
    }
    async updateServerOAuthProvider(userId, providerId, data) {
        const response = await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject26(), userId, providerId), {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(data)
        }, null);
        return await response.json();
    }
    async deleteServerOAuthProvider(userId, providerId) {
        const response = await this.sendServerRequest((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["urlString"])(_templateObject27(), userId, providerId), {
            method: "DELETE"
        }, null);
        return await response.json();
    }
    async sendEmail(options) {
        const res = await this.sendServerRequestAndCatchKnownError("/emails/send-email", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                user_ids: options.userIds,
                theme_id: options.themeId,
                html: options.html,
                subject: options.subject,
                notification_category_name: options.notificationCategoryName,
                template_id: options.templateId,
                variables: options.variables
            })
        }, null, [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].RequiresCustomEmailServer,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].SchemaError,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KnownErrors"].UserIdDoesNotExist
        ]);
        if (res.status === "error") {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].error(res.error);
        }
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$results$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Result"].ok(void 0);
    }
    async updateItemQuantity(customerId, itemId, data) {
        var _data_allow_negative;
        const queryParams = new URLSearchParams({
            allow_negative: ((_data_allow_negative = data.allow_negative) !== null && _data_allow_negative !== void 0 ? _data_allow_negative : false).toString()
        });
        await this.sendServerRequest("/payments/items/".concat(customerId, "/").concat(itemId, "/update-quantity?").concat(queryParams.toString()), {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                delta: data.delta,
                expires_at: data.expires_at,
                description: data.description
            })
        }, null);
    }
    constructor(options){
        super(options);
        this.options = options;
    }
};
;
 //# sourceMappingURL=server-interface.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/interface/admin-interface.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/interface/admin-interface.ts
__turbopack_context__.s({
    "StackAdminInterface": ()=>StackAdminInterface
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$interface$2f$server$2d$interface$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/interface/server-interface.js [app-client] (ecmascript)");
;
var StackAdminInterface = class extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$interface$2f$server$2d$interface$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackServerInterface"] {
    async sendAdminRequest(path, options, session) {
        let requestType = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "admin";
        return await this.sendServerRequest(path, {
            ...options,
            headers: {
                "x-stack-super-secret-admin-key": "superSecretAdminKey" in this.options ? this.options.superSecretAdminKey : "",
                ...options.headers
            }
        }, session, requestType);
    }
    async getProject() {
        const response = await this.sendAdminRequest("/internal/projects/current", {
            method: "GET"
        }, null);
        return await response.json();
    }
    async updateProject(update) {
        const response = await this.sendAdminRequest("/internal/projects/current", {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(update)
        }, null);
        return await response.json();
    }
    async createInternalApiKey(options) {
        const response = await this.sendAdminRequest("/internal/api-keys", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(options)
        }, null);
        return await response.json();
    }
    async listInternalApiKeys() {
        const response = await this.sendAdminRequest("/internal/api-keys", {}, null);
        const result = await response.json();
        return result.items;
    }
    async revokeInternalApiKeyById(id) {
        await this.sendAdminRequest("/internal/api-keys/".concat(id), {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                revoked: true
            })
        }, null);
    }
    async getInternalApiKey(id, session) {
        const response = await this.sendAdminRequest("/internal/api-keys/".concat(id), {}, session);
        return await response.json();
    }
    async listInternalEmailTemplates() {
        const response = await this.sendAdminRequest("/internal/email-templates", {}, null);
        const result = await response.json();
        return result.templates;
    }
    async listEmailThemes() {
        const response = await this.sendAdminRequest("/internal/email-themes", {}, null);
        const result = await response.json();
        return result.themes;
    }
    // Team permission definitions methods
    async listTeamPermissionDefinitions() {
        const response = await this.sendAdminRequest("/team-permission-definitions", {}, null);
        const result = await response.json();
        return result.items;
    }
    async createTeamPermissionDefinition(data) {
        const response = await this.sendAdminRequest("/team-permission-definitions", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(data)
        }, null);
        return await response.json();
    }
    async updateTeamPermissionDefinition(permissionId, data) {
        const response = await this.sendAdminRequest("/team-permission-definitions/".concat(permissionId), {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(data)
        }, null);
        return await response.json();
    }
    async deleteTeamPermissionDefinition(permissionId) {
        await this.sendAdminRequest("/team-permission-definitions/".concat(permissionId), {
            method: "DELETE"
        }, null);
    }
    async listProjectPermissionDefinitions() {
        const response = await this.sendAdminRequest("/project-permission-definitions", {}, null);
        const result = await response.json();
        return result.items;
    }
    async createProjectPermissionDefinition(data) {
        const response = await this.sendAdminRequest("/project-permission-definitions", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(data)
        }, null);
        return await response.json();
    }
    async updateProjectPermissionDefinition(permissionId, data) {
        const response = await this.sendAdminRequest("/project-permission-definitions/".concat(permissionId), {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(data)
        }, null);
        return await response.json();
    }
    async deleteProjectPermissionDefinition(permissionId) {
        await this.sendAdminRequest("/project-permission-definitions/".concat(permissionId), {
            method: "DELETE"
        }, null);
    }
    async getSvixToken() {
        const response = await this.sendAdminRequest("/webhooks/svix-token", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({})
        }, null);
        return await response.json();
    }
    async deleteProject() {
        await this.sendAdminRequest("/internal/projects/current", {
            method: "DELETE"
        }, null);
    }
    async getMetrics() {
        const response = await this.sendAdminRequest("/internal/metrics", {
            method: "GET"
        }, null);
        return await response.json();
    }
    async sendTestEmail(data) {
        const response = await this.sendAdminRequest("/internal/send-test-email", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(data)
        }, null);
        return await response.json();
    }
    async listSentEmails() {
        const response = await this.sendAdminRequest("/internal/emails", {
            method: "GET"
        }, null);
        return await response.json();
    }
    async sendSignInInvitationEmail(email, callbackUrl) {
        await this.sendAdminRequest("/internal/send-sign-in-invitation", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                email,
                callback_url: callbackUrl
            })
        }, null);
    }
    async sendChatMessage(threadId, contextType, messages, abortSignal) {
        const response = await this.sendAdminRequest("/internal/ai-chat/".concat(threadId), {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                context_type: contextType,
                messages
            }),
            signal: abortSignal
        }, null);
        return await response.json();
    }
    async saveChatMessage(threadId, message) {
        await this.sendAdminRequest("/internal/ai-chat/".concat(threadId), {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                message
            })
        }, null);
    }
    async listChatMessages(threadId) {
        const response = await this.sendAdminRequest("/internal/ai-chat/".concat(threadId), {
            method: "GET"
        }, null);
        return await response.json();
    }
    async renderEmailPreview(options) {
        const response = await this.sendAdminRequest("/emails/render-email", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                theme_id: options.themeId,
                theme_tsx_source: options.themeTsxSource,
                template_id: options.templateId,
                template_tsx_source: options.templateTsxSource
            })
        }, null);
        return await response.json();
    }
    async createEmailTheme(displayName) {
        const response = await this.sendAdminRequest("/internal/email-themes", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                display_name: displayName
            })
        }, null);
        return await response.json();
    }
    async getEmailTheme(id) {
        const response = await this.sendAdminRequest("/internal/email-themes/".concat(id), {
            method: "GET"
        }, null);
        return await response.json();
    }
    async updateEmailTheme(id, tsxSource) {
        await this.sendAdminRequest("/internal/email-themes/".concat(id), {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                tsx_source: tsxSource
            })
        }, null);
    }
    async updateEmailTemplate(id, tsxSource, themeId) {
        const response = await this.sendAdminRequest("/internal/email-templates/".concat(id), {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                tsx_source: tsxSource,
                theme_id: themeId
            })
        }, null);
        return await response.json();
    }
    async getConfig() {
        const response = await this.sendAdminRequest("/internal/config", {
            method: "GET"
        }, null);
        return await response.json();
    }
    async updateConfig(data) {
        const response = await this.sendAdminRequest("/internal/config/override", {
            method: "PATCH",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                config_override_string: JSON.stringify(data.configOverride)
            })
        }, null);
        return await response.json();
    }
    async createEmailTemplate(displayName) {
        const response = await this.sendAdminRequest("/internal/email-templates", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                display_name: displayName
            })
        }, null);
        return await response.json();
    }
    async setupPayments() {
        const response = await this.sendAdminRequest("/internal/payments/setup", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({})
        }, null);
        return await response.json();
    }
    async createStripeWidgetAccountSession() {
        const response = await this.sendAdminRequest("/internal/payments/stripe-widgets/account-session", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({})
        }, null);
        return await response.json();
    }
    async createPurchaseUrl(options) {
        const response = await this.sendAdminRequest("/payments/purchases/create-purchase-url", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(options)
        }, null);
        const result = await response.json();
        return result.url;
    }
    constructor(options){
        super(options);
        this.options = options;
    }
};
;
 //# sourceMappingURL=admin-interface.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

// src/index.ts
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$interface$2f$admin$2d$interface$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/interface/admin-interface.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$interface$2f$client$2d$interface$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/interface/client-interface.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$interface$2f$server$2d$interface$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/interface/server-interface.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/known-errors.js [app-client] (ecmascript)");
;
;
;
;
;
 //# sourceMappingURL=index.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$interface$2f$admin$2d$interface$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/interface/admin-interface.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$interface$2f$client$2d$interface$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/interface/client-interface.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$interface$2f$server$2d$interface$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/interface/server-interface.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$known$2d$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/known-errors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/index.js [app-client] (ecmascript) <locals>");
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/helpers/production-mode.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/helpers/production-mode.ts
__turbopack_context__.s({
    "getProductionModeErrors": ()=>getProductionModeErrors
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/urls.js [app-client] (ecmascript)");
;
;
function getProductionModeErrors(project) {
    const errors = [];
    const domainsFixUrl = "/projects/".concat(project.id, "/domains");
    if (project.config.allow_localhost) {
        errors.push({
            message: "Localhost is not allowed in production mode, turn off 'Allow localhost' in project settings",
            relativeFixUrl: domainsFixUrl
        });
    }
    for (const { domain } of project.config.domains){
        let url;
        try {
            url = new URL(domain);
        } catch (e) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["captureError"])("production-mode-domain-not-valid", new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StackAssertionError"]("Domain was somehow not a valid URL; we should've caught this when setting the domain in the first place", {
                domain,
                projectId: project
            }));
            errors.push({
                message: "Trusted domain is not a valid URL: " + domain,
                relativeFixUrl: domainsFixUrl
            });
            continue;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$urls$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isLocalhost"])(url)) {
            errors.push({
                message: "Localhost domains are not allowed to be trusted in production mode: " + domain,
                relativeFixUrl: domainsFixUrl
            });
        } else if (url.hostname.match(/^\d+(\.\d+)*$/)) {
            errors.push({
                message: "Direct IPs are not valid for trusted domains in production mode: " + domain,
                relativeFixUrl: domainsFixUrl
            });
        } else if (url.protocol !== "https:") {
            errors.push({
                message: "Trusted domains should be HTTPS: " + domain,
                relativeFixUrl: domainsFixUrl
            });
        }
    }
    return errors;
}
;
 //# sourceMappingURL=production-mode.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/caches.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/caches.tsx
__turbopack_context__.s({
    "AsyncCache": ()=>AsyncCache,
    "cacheFunction": ()=>cacheFunction
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$maps$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/maps.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$objects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/promises.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$stores$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/stores.js [app-client] (ecmascript)");
;
;
;
;
function cacheFunction(f) {
    const dependenciesMap = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$maps$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DependenciesMap"]();
    return function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
            args[_key] = arguments[_key];
        }
        if (dependenciesMap.has(args)) {
            return dependenciesMap.get(args);
        }
        const value = f(...args);
        dependenciesMap.set(args, value);
        return value;
    };
}
var AsyncCache = class {
    _createKeyed(functionName) {
        var _this = this;
        return function(key) {
            for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
                args[_key - 1] = arguments[_key];
            }
            const valueCache = _this.getValueCache(key);
            return valueCache[functionName].apply(valueCache, args);
        };
    }
    getValueCache(dependencies) {
        let cache = this._map.get(dependencies);
        if (!cache) {
            cache = new AsyncValueCache(async ()=>await this._fetcher(dependencies), {
                ...this._options,
                onSubscribe: this._options.onSubscribe ? (cb)=>this._options.onSubscribe(dependencies, cb) : void 0
            });
            this._map.set(dependencies, cache);
        }
        return cache;
    }
    async refreshWhere(predicate) {
        const promises = [];
        for (const [dependencies, cache] of this._map){
            if (predicate(dependencies)) {
                promises.push(cache.refresh());
            }
        }
        await Promise.all(promises);
    }
    constructor(_fetcher, _options = {}){
        this._fetcher = _fetcher;
        this._options = _options;
        this._map = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$maps$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DependenciesMap"]();
        this.isCacheAvailable = this._createKeyed("isCacheAvailable");
        this.getIfCached = this._createKeyed("getIfCached");
        this.getOrWait = this._createKeyed("getOrWait");
        this.forceSetCachedValue = this._createKeyed("forceSetCachedValue");
        this.forceSetCachedValueAsync = this._createKeyed("forceSetCachedValueAsync");
        this.refresh = this._createKeyed("refresh");
        this.invalidate = this._createKeyed("invalidate");
        this.onStateChange = this._createKeyed("onStateChange");
    }
};
var AsyncValueCache = class {
    isCacheAvailable() {
        return this._store.isAvailable();
    }
    getIfCached() {
        return this._store.get();
    }
    getOrWait(cacheStrategy) {
        const cached = this.getIfCached();
        if (cacheStrategy === "read-write" && cached.status === "ok") {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolved"])(cached.data);
        }
        return this._refetch(cacheStrategy);
    }
    _set(value) {
        this._store.set(value);
    }
    _setAsync(value) {
        const promise = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pending"])(value);
        this._pendingPromise = promise;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pending"])(this._store.setAsync(promise));
    }
    _refetch(cacheStrategy) {
        if (cacheStrategy === "read-write" && this._pendingPromise) {
            return this._pendingPromise;
        }
        const promise = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pending"])(this._fetcher());
        if (cacheStrategy === "never") {
            return promise;
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pending"])(this._setAsync(promise).then(()=>promise));
    }
    forceSetCachedValue(value) {
        this._set(value);
    }
    forceSetCachedValueAsync(value) {
        return this._setAsync(value);
    }
    /**
   * Refetches the value from the fetcher, and updates the cache with it.
   */ async refresh() {
        return await this.getOrWait("write-only");
    }
    /**
   * Invalidates the cache, marking it to refresh on the next read. If anyone was listening to it, it will refresh
   * immediately.
   */ invalidate() {
        this._store.setUnavailable();
        this._pendingPromise = void 0;
        if (this._subscriptionsCount > 0) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["runAsynchronously"])(this.refresh());
        }
    }
    onStateChange(callback) {
        const storeObj = this._store.onChange(callback);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["runAsynchronously"])(this.getOrWait("read-write"));
        if (this._subscriptionsCount++ === 0 && this._options.onSubscribe) {
            const unsubscribe = this._options.onSubscribe(()=>{
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["runAsynchronously"])(this.refresh());
            });
            this._unsubscribers.push(unsubscribe);
        }
        let hasUnsubscribed = false;
        return {
            unsubscribe: ()=>{
                if (hasUnsubscribed) return;
                hasUnsubscribed = true;
                storeObj.unsubscribe();
                if (--this._subscriptionsCount === 0) {
                    const currentRefreshPromiseIndex = ++this._mostRecentRefreshPromiseIndex;
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["runAsynchronously"])(async ()=>{
                        await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["wait"])(5e3);
                        if (this._subscriptionsCount === 0 && currentRefreshPromiseIndex === this._mostRecentRefreshPromiseIndex) {
                            this.invalidate();
                        }
                    });
                    for (const unsubscribe of this._unsubscribers){
                        unsubscribe();
                    }
                }
            }
        };
    }
    constructor(fetcher, _options = {}){
        this._options = _options;
        this._subscriptionsCount = 0;
        this._unsubscribers = [];
        this._mostRecentRefreshPromiseIndex = 0;
        this._store = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$stores$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AsyncStore"]();
        var _options_rateLimiter;
        this._rateLimitOptions = {
            concurrency: 1,
            throttleMs: 300,
            ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$objects$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["filterUndefined"])((_options_rateLimiter = _options.rateLimiter) !== null && _options_rateLimiter !== void 0 ? _options_rateLimiter : {})
        };
        this._fetcher = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rateLimited"])(fetcher, {
            ...this._rateLimitOptions,
            batchCalls: true
        });
    }
};
;
 //# sourceMappingURL=caches.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/env.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/env.tsx
__turbopack_context__.s({
    "getEnvVariable": ()=>getEnvVariable,
    "getNextRuntime": ()=>getNextRuntime,
    "getNodeEnvironment": ()=>getNodeEnvironment,
    "isBrowserLike": ()=>isBrowserLike
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_tagged_template_literal.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js [app-client] (ecmascript)");
;
function _templateObject() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "\n      Can't use getEnvVariable on the client because Next.js transpiles expressions of the kind process.env.XYZ at build-time on the client.\n    \n      Use process.env.XYZ directly instead.\n    "
    ]);
    _templateObject = function() {
        return data;
    };
    return data;
}
function _templateObject1() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "\n      Can't use getEnvVariable to access the NEXT_RUNTIME environment variable because it's compiled into the client bundle.\n    \n      Use getNextRuntime() instead.\n    "
    ]);
    _templateObject1 = function() {
        return data;
    };
    return data;
}
;
;
function isBrowserLike() {
    return typeof window !== "undefined" && typeof document !== "undefined" && typeof document.createElement !== "undefined";
}
var ENV_VAR_RENAME = {
    NEXT_PUBLIC_STACK_API_URL: [
        "STACK_BASE_URL",
        "NEXT_PUBLIC_STACK_URL"
    ]
};
function getEnvVariable(name, defaultValue) {
    if (isBrowserLike()) {
        throw new Error((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deindent"])(_templateObject()));
    }
    if (name === "NEXT_RUNTIME") {
        throw new Error((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deindent"])(_templateObject1()));
    }
    for (const [newName, oldNames] of Object.entries(ENV_VAR_RENAME)){
        if (oldNames.includes(name)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["throwErr"])("Environment variable ".concat(name, " has been renamed to ").concat(newName, ". Please update your configuration to use the new name."));
        }
    }
    let value = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].env[name];
    if (!value && ENV_VAR_RENAME[name]) {
        for (const oldName of ENV_VAR_RENAME[name]){
            value = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].env[oldName];
            if (value) break;
        }
    }
    if (value === void 0) {
        if (defaultValue !== void 0) {
            value = defaultValue;
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["throwErr"])("Missing environment variable: ".concat(name));
        }
    }
    return value;
}
function getNextRuntime() {
    return ("TURBOPACK compile-time value", "") || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$errors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["throwErr"])("Missing environment variable: NEXT_RUNTIME");
}
function getNodeEnvironment() {
    return getEnvVariable("NODE_ENV", "");
}
;
 //# sourceMappingURL=env.js.map
}),
"[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/react.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/utils/react.tsx
__turbopack_context__.s({
    "NoSuspenseBoundaryError": ()=>NoSuspenseBoundaryError,
    "componentWrapper": ()=>componentWrapper,
    "forwardRefIfNeeded": ()=>forwardRefIfNeeded,
    "getNodeText": ()=>getNodeText,
    "mapRef": ()=>mapRef,
    "mapRefState": ()=>mapRefState,
    "suspend": ()=>suspend,
    "suspendIfSsr": ()=>suspendIfSsr,
    "useRefState": ()=>useRefState
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_tagged_template_literal.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$env$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/env.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/promises.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js [app-client] (ecmascript)");
;
function _templateObject() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "\n      ",
        " attempted to display a loading indicator, but didn't find a Suspense boundary above it. Please read the error message below carefully.\n      \n      The fix depends on which of the 3 scenarios caused it:\n      \n      1. You are missing a loading.tsx file in your app directory. Fix it by adding a loading.tsx file in your app directory.\n\n      2. The component is rendered in the root (outermost) layout.tsx or template.tsx file. Next.js does not wrap those files in a Suspense boundary, even if there is a loading.tsx file in the same folder. To fix it, wrap your layout inside a route group like this:\n\n        - app\n        - - layout.tsx  // contains <html> and <body>, alongside providers and other components that don't need ",
        "\n        - - loading.tsx  // required for suspense\n        - - (main)\n        - - - layout.tsx  // contains the main layout of your app, like a sidebar or a header, and can use ",
        "\n        - - - route.tsx  // your actual main page\n        - - - the rest of your app\n\n        For more information on this approach, see Next's documentation on route groups: https://nextjs.org/docs/app/building-your-application/routing/route-groups\n      \n      3. You caught this error with try-catch or a custom error boundary. Fix this by rethrowing the error or not catching it in the first place.\n\n      See: https://nextjs.org/docs/messages/missing-suspense-with-csr-bailout\n\n      More information on SSR and Suspense boundaries: https://react.dev/reference/react/Suspense#providing-a-fallback-for-server-errors-and-client-only-content\n    "
    ]);
    _templateObject = function() {
        return data;
    };
    return data;
}
;
;
;
;
function componentWrapper(displayName, render) {
    const Component = forwardRefIfNeeded(render);
    Component.displayName = displayName;
    return Component;
}
function forwardRefIfNeeded(render) {
    const version = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].version;
    const major = parseInt(version.split(".")[0]);
    if (major < 19) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].forwardRef(render);
    } else {
        return (props)=>render(props, props.ref);
    }
}
function getNodeText(node) {
    if ([
        "number",
        "string"
    ].includes(typeof node)) {
        return "".concat(node);
    }
    if (!node) {
        return "";
    }
    if (Array.isArray(node)) {
        return node.map(getNodeText).join("");
    }
    if (typeof node === "object" && "props" in node) {
        return getNodeText(node.props.children);
    }
    throw new Error("Unknown node type: ".concat(typeof node));
}
function suspend() {
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].use((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$promises$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["neverResolve"])());
    throw new Error("Somehow a Promise that never resolves was resolved?");
}
function mapRef(ref, mapper) {
    let last = null;
    return {
        get current () {
            const input = ref.current;
            if (last === null || input !== last[0]) {
                last = [
                    input,
                    mapper(input)
                ];
            }
            return last[1];
        }
    };
}
function useRefState(initialValue) {
    const [, setState] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].useState(initialValue);
    const ref = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].useRef(initialValue);
    const setValue = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].useCallback({
        "useRefState.useCallback[setValue]": (updater)=>{
            const value = typeof updater === "function" ? updater(ref.current) : updater;
            setState(value);
            ref.current = value;
        }
    }["useRefState.useCallback[setValue]"], []);
    const res = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].useMemo({
        "useRefState.useMemo[res]": ()=>({
                current: ref.current,
                set: setValue
            })
    }["useRefState.useMemo[res]"], [
        ref.current,
        setValue
    ]);
    return res;
}
function mapRefState(refState, mapper, reverseMapper) {
    let last = null;
    return {
        get current () {
            const input = refState.current;
            if (last === null || input !== last[0]) {
                last = [
                    input,
                    mapper(input)
                ];
            }
            return last[1];
        },
        set (updater) {
            const value = typeof updater === "function" ? updater(this.current) : updater;
            refState.set(reverseMapper(refState.current, value));
        }
    };
}
var NoSuspenseBoundaryError = class extends Error {
    constructor(options){
        var _options_caller, _options_caller1, _options_caller2;
        super((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$strings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deindent"])(_templateObject(), (_options_caller = options.caller) !== null && _options_caller !== void 0 ? _options_caller : "This code path", (_options_caller1 = options.caller) !== null && _options_caller1 !== void 0 ? _options_caller1 : "this code path", (_options_caller2 = options.caller) !== null && _options_caller2 !== void 0 ? _options_caller2 : "this code path"));
        this.name = "NoSuspenseBoundaryError";
        var _options_caller3;
        this.reason = (_options_caller3 = options.caller) !== null && _options_caller3 !== void 0 ? _options_caller3 : "suspendIfSsr()";
        this.digest = "BAILOUT_TO_CLIENT_SIDE_RENDERING";
    }
};
function suspendIfSsr(caller) {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$stackframe$2f$stack$2d$shared$2f$dist$2f$esm$2f$utils$2f$env$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBrowserLike"])()) {
        throw new NoSuspenseBoundaryError({
            caller
        });
    }
}
;
 //# sourceMappingURL=react.js.map
}),
}]);

//# sourceMappingURL=node_modules_%40stackframe_stack-shared_dist_esm_1e8e3ba1._.js.map